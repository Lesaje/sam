node {
  name: "anchors"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 2034
          }
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "scale_logits/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1
      }
    }
  }
}
node {
  name: "concat_1/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "concat/axis"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "BoxPredictor_5/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_5/ClassPredictor/biases"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 546
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_5/ClassPredictor/biases/read"
  op: "Identity"
  input: "BoxPredictor_5/ClassPredictor/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_5/ClassPredictor/biases"
      }
    }
  }
}
node {
  name: "BoxPredictor_5/ClassPredictor/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 546
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_5/ClassPredictor/weights/read"
  op: "Identity"
  input: "BoxPredictor_5/ClassPredictor/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_5/ClassPredictor/weights"
      }
    }
  }
}
node {
  name: "BoxPredictor_5/ClassPredictor_depthwise/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_5/ClassPredictor_depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "BoxPredictor_5/ClassPredictor_depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_5/ClassPredictor_depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "BoxPredictor_5/ClassPredictor_depthwise/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_5/ClassPredictor_depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "BoxPredictor_5/ClassPredictor_depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_5/ClassPredictor_depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "BoxPredictor_5/ClassPredictor_depthwise/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_5/ClassPredictor_depthwise/BatchNorm/gamma/read"
  op: "Identity"
  input: "BoxPredictor_5/ClassPredictor_depthwise/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_5/ClassPredictor_depthwise/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "BoxPredictor_5/ClassPredictor_depthwise/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_5/ClassPredictor_depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "BoxPredictor_5/ClassPredictor_depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_5/ClassPredictor_depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "BoxPredictor_5/ClassPredictor_depthwise/depthwise_weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_5/ClassPredictor_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "BoxPredictor_5/ClassPredictor_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_5/ClassPredictor_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "BoxPredictor_5/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_5/BoxEncodingPredictor/biases"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_5/BoxEncodingPredictor/biases/read"
  op: "Identity"
  input: "BoxPredictor_5/BoxEncodingPredictor/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_5/BoxEncodingPredictor/biases"
      }
    }
  }
}
node {
  name: "BoxPredictor_5/BoxEncodingPredictor/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_5/BoxEncodingPredictor/weights/read"
  op: "Identity"
  input: "BoxPredictor_5/BoxEncodingPredictor/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_5/BoxEncodingPredictor/weights"
      }
    }
  }
}
node {
  name: "BoxPredictor_5/BoxEncodingPredictor_depthwise/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_5/BoxEncodingPredictor_depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "BoxPredictor_5/BoxEncodingPredictor_depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_5/BoxEncodingPredictor_depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "BoxPredictor_5/BoxEncodingPredictor_depthwise/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_5/BoxEncodingPredictor_depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "BoxPredictor_5/BoxEncodingPredictor_depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_5/BoxEncodingPredictor_depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "BoxPredictor_5/BoxEncodingPredictor_depthwise/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_5/BoxEncodingPredictor_depthwise/BatchNorm/gamma/read"
  op: "Identity"
  input: "BoxPredictor_5/BoxEncodingPredictor_depthwise/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_5/BoxEncodingPredictor_depthwise/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "BoxPredictor_5/BoxEncodingPredictor_depthwise/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_5/BoxEncodingPredictor_depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "BoxPredictor_5/BoxEncodingPredictor_depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_5/BoxEncodingPredictor_depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "BoxPredictor_5/BoxEncodingPredictor_depthwise/depthwise_weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_5/BoxEncodingPredictor_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "BoxPredictor_5/BoxEncodingPredictor_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_5/BoxEncodingPredictor_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "BoxPredictor_4/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_4/ClassPredictor/biases"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 546
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_4/ClassPredictor/biases/read"
  op: "Identity"
  input: "BoxPredictor_4/ClassPredictor/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_4/ClassPredictor/biases"
      }
    }
  }
}
node {
  name: "BoxPredictor_4/ClassPredictor/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 546
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_4/ClassPredictor/weights/read"
  op: "Identity"
  input: "BoxPredictor_4/ClassPredictor/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_4/ClassPredictor/weights"
      }
    }
  }
}
node {
  name: "BoxPredictor_4/ClassPredictor_depthwise/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_4/ClassPredictor_depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "BoxPredictor_4/ClassPredictor_depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_4/ClassPredictor_depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "BoxPredictor_4/ClassPredictor_depthwise/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_4/ClassPredictor_depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "BoxPredictor_4/ClassPredictor_depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_4/ClassPredictor_depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "BoxPredictor_4/ClassPredictor_depthwise/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_4/ClassPredictor_depthwise/BatchNorm/gamma/read"
  op: "Identity"
  input: "BoxPredictor_4/ClassPredictor_depthwise/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_4/ClassPredictor_depthwise/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "BoxPredictor_4/ClassPredictor_depthwise/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_4/ClassPredictor_depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "BoxPredictor_4/ClassPredictor_depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_4/ClassPredictor_depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "BoxPredictor_4/ClassPredictor_depthwise/depthwise_weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_4/ClassPredictor_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "BoxPredictor_4/ClassPredictor_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_4/ClassPredictor_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "BoxPredictor_4/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_4/BoxEncodingPredictor/biases"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_4/BoxEncodingPredictor/biases/read"
  op: "Identity"
  input: "BoxPredictor_4/BoxEncodingPredictor/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_4/BoxEncodingPredictor/biases"
      }
    }
  }
}
node {
  name: "BoxPredictor_4/BoxEncodingPredictor/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_4/BoxEncodingPredictor/weights/read"
  op: "Identity"
  input: "BoxPredictor_4/BoxEncodingPredictor/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_4/BoxEncodingPredictor/weights"
      }
    }
  }
}
node {
  name: "BoxPredictor_4/BoxEncodingPredictor_depthwise/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_4/BoxEncodingPredictor_depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "BoxPredictor_4/BoxEncodingPredictor_depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_4/BoxEncodingPredictor_depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "BoxPredictor_4/BoxEncodingPredictor_depthwise/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_4/BoxEncodingPredictor_depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "BoxPredictor_4/BoxEncodingPredictor_depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_4/BoxEncodingPredictor_depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "BoxPredictor_4/BoxEncodingPredictor_depthwise/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_4/BoxEncodingPredictor_depthwise/BatchNorm/gamma/read"
  op: "Identity"
  input: "BoxPredictor_4/BoxEncodingPredictor_depthwise/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_4/BoxEncodingPredictor_depthwise/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "BoxPredictor_4/BoxEncodingPredictor_depthwise/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_4/BoxEncodingPredictor_depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "BoxPredictor_4/BoxEncodingPredictor_depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_4/BoxEncodingPredictor_depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "BoxPredictor_4/BoxEncodingPredictor_depthwise/depthwise_weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_4/BoxEncodingPredictor_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "BoxPredictor_4/BoxEncodingPredictor_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_4/BoxEncodingPredictor_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "BoxPredictor_3/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_3/ClassPredictor/biases"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 546
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_3/ClassPredictor/biases/read"
  op: "Identity"
  input: "BoxPredictor_3/ClassPredictor/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_3/ClassPredictor/biases"
      }
    }
  }
}
node {
  name: "BoxPredictor_3/ClassPredictor/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 546
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_3/ClassPredictor/weights/read"
  op: "Identity"
  input: "BoxPredictor_3/ClassPredictor/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_3/ClassPredictor/weights"
      }
    }
  }
}
node {
  name: "BoxPredictor_3/ClassPredictor_depthwise/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_3/ClassPredictor_depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "BoxPredictor_3/ClassPredictor_depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_3/ClassPredictor_depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "BoxPredictor_3/ClassPredictor_depthwise/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_3/ClassPredictor_depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "BoxPredictor_3/ClassPredictor_depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_3/ClassPredictor_depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "BoxPredictor_3/ClassPredictor_depthwise/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_3/ClassPredictor_depthwise/BatchNorm/gamma/read"
  op: "Identity"
  input: "BoxPredictor_3/ClassPredictor_depthwise/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_3/ClassPredictor_depthwise/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "BoxPredictor_3/ClassPredictor_depthwise/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_3/ClassPredictor_depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "BoxPredictor_3/ClassPredictor_depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_3/ClassPredictor_depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "BoxPredictor_3/ClassPredictor_depthwise/depthwise_weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_3/ClassPredictor_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "BoxPredictor_3/ClassPredictor_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_3/ClassPredictor_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "BoxPredictor_3/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_3/BoxEncodingPredictor/biases"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_3/BoxEncodingPredictor/biases/read"
  op: "Identity"
  input: "BoxPredictor_3/BoxEncodingPredictor/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_3/BoxEncodingPredictor/biases"
      }
    }
  }
}
node {
  name: "BoxPredictor_3/BoxEncodingPredictor/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_3/BoxEncodingPredictor/weights/read"
  op: "Identity"
  input: "BoxPredictor_3/BoxEncodingPredictor/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_3/BoxEncodingPredictor/weights"
      }
    }
  }
}
node {
  name: "BoxPredictor_3/BoxEncodingPredictor_depthwise/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_3/BoxEncodingPredictor_depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "BoxPredictor_3/BoxEncodingPredictor_depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_3/BoxEncodingPredictor_depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "BoxPredictor_3/BoxEncodingPredictor_depthwise/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_3/BoxEncodingPredictor_depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "BoxPredictor_3/BoxEncodingPredictor_depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_3/BoxEncodingPredictor_depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "BoxPredictor_3/BoxEncodingPredictor_depthwise/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_3/BoxEncodingPredictor_depthwise/BatchNorm/gamma/read"
  op: "Identity"
  input: "BoxPredictor_3/BoxEncodingPredictor_depthwise/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_3/BoxEncodingPredictor_depthwise/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "BoxPredictor_3/BoxEncodingPredictor_depthwise/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_3/BoxEncodingPredictor_depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "BoxPredictor_3/BoxEncodingPredictor_depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_3/BoxEncodingPredictor_depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "BoxPredictor_3/BoxEncodingPredictor_depthwise/depthwise_weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_3/BoxEncodingPredictor_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "BoxPredictor_3/BoxEncodingPredictor_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_3/BoxEncodingPredictor_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "BoxPredictor_2/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_2/ClassPredictor/biases"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 546
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_2/ClassPredictor/biases/read"
  op: "Identity"
  input: "BoxPredictor_2/ClassPredictor/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_2/ClassPredictor/biases"
      }
    }
  }
}
node {
  name: "BoxPredictor_2/ClassPredictor/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 546
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_2/ClassPredictor/weights/read"
  op: "Identity"
  input: "BoxPredictor_2/ClassPredictor/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_2/ClassPredictor/weights"
      }
    }
  }
}
node {
  name: "BoxPredictor_2/ClassPredictor_depthwise/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_2/ClassPredictor_depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "BoxPredictor_2/ClassPredictor_depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_2/ClassPredictor_depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "BoxPredictor_2/ClassPredictor_depthwise/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_2/ClassPredictor_depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "BoxPredictor_2/ClassPredictor_depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_2/ClassPredictor_depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "BoxPredictor_2/ClassPredictor_depthwise/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_2/ClassPredictor_depthwise/BatchNorm/gamma/read"
  op: "Identity"
  input: "BoxPredictor_2/ClassPredictor_depthwise/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_2/ClassPredictor_depthwise/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "BoxPredictor_2/ClassPredictor_depthwise/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_2/ClassPredictor_depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "BoxPredictor_2/ClassPredictor_depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_2/ClassPredictor_depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "BoxPredictor_2/ClassPredictor_depthwise/depthwise_weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_2/ClassPredictor_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "BoxPredictor_2/ClassPredictor_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_2/ClassPredictor_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "BoxPredictor_2/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_2/BoxEncodingPredictor/biases"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_2/BoxEncodingPredictor/biases/read"
  op: "Identity"
  input: "BoxPredictor_2/BoxEncodingPredictor/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_2/BoxEncodingPredictor/biases"
      }
    }
  }
}
node {
  name: "BoxPredictor_2/BoxEncodingPredictor/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_2/BoxEncodingPredictor/weights/read"
  op: "Identity"
  input: "BoxPredictor_2/BoxEncodingPredictor/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_2/BoxEncodingPredictor/weights"
      }
    }
  }
}
node {
  name: "BoxPredictor_2/BoxEncodingPredictor_depthwise/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_2/BoxEncodingPredictor_depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "BoxPredictor_2/BoxEncodingPredictor_depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_2/BoxEncodingPredictor_depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "BoxPredictor_2/BoxEncodingPredictor_depthwise/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_2/BoxEncodingPredictor_depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "BoxPredictor_2/BoxEncodingPredictor_depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_2/BoxEncodingPredictor_depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "BoxPredictor_2/BoxEncodingPredictor_depthwise/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_2/BoxEncodingPredictor_depthwise/BatchNorm/gamma/read"
  op: "Identity"
  input: "BoxPredictor_2/BoxEncodingPredictor_depthwise/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_2/BoxEncodingPredictor_depthwise/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "BoxPredictor_2/BoxEncodingPredictor_depthwise/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_2/BoxEncodingPredictor_depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "BoxPredictor_2/BoxEncodingPredictor_depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_2/BoxEncodingPredictor_depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "BoxPredictor_2/BoxEncodingPredictor_depthwise/depthwise_weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 512
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_2/BoxEncodingPredictor_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "BoxPredictor_2/BoxEncodingPredictor_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_2/BoxEncodingPredictor_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "BoxPredictor_1/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_1/ClassPredictor/biases"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 546
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_1/ClassPredictor/biases/read"
  op: "Identity"
  input: "BoxPredictor_1/ClassPredictor/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_1/ClassPredictor/biases"
      }
    }
  }
}
node {
  name: "BoxPredictor_1/ClassPredictor/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 480
          }
          dim {
            size: 546
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_1/ClassPredictor/weights/read"
  op: "Identity"
  input: "BoxPredictor_1/ClassPredictor/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_1/ClassPredictor/weights"
      }
    }
  }
}
node {
  name: "BoxPredictor_1/ClassPredictor_depthwise/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 480
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_1/ClassPredictor_depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "BoxPredictor_1/ClassPredictor_depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_1/ClassPredictor_depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "BoxPredictor_1/ClassPredictor_depthwise/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 480
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_1/ClassPredictor_depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "BoxPredictor_1/ClassPredictor_depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_1/ClassPredictor_depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "BoxPredictor_1/ClassPredictor_depthwise/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 480
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_1/ClassPredictor_depthwise/BatchNorm/gamma/read"
  op: "Identity"
  input: "BoxPredictor_1/ClassPredictor_depthwise/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_1/ClassPredictor_depthwise/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "BoxPredictor_1/ClassPredictor_depthwise/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 480
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_1/ClassPredictor_depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "BoxPredictor_1/ClassPredictor_depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_1/ClassPredictor_depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "BoxPredictor_1/ClassPredictor_depthwise/depthwise_weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 480
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_1/ClassPredictor_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "BoxPredictor_1/ClassPredictor_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_1/ClassPredictor_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "BoxPredictor_1/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_1/BoxEncodingPredictor/biases"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_1/BoxEncodingPredictor/biases/read"
  op: "Identity"
  input: "BoxPredictor_1/BoxEncodingPredictor/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_1/BoxEncodingPredictor/biases"
      }
    }
  }
}
node {
  name: "BoxPredictor_1/BoxEncodingPredictor/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 480
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_1/BoxEncodingPredictor/weights/read"
  op: "Identity"
  input: "BoxPredictor_1/BoxEncodingPredictor/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_1/BoxEncodingPredictor/weights"
      }
    }
  }
}
node {
  name: "BoxPredictor_1/BoxEncodingPredictor_depthwise/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 480
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_1/BoxEncodingPredictor_depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "BoxPredictor_1/BoxEncodingPredictor_depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_1/BoxEncodingPredictor_depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "BoxPredictor_1/BoxEncodingPredictor_depthwise/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 480
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_1/BoxEncodingPredictor_depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "BoxPredictor_1/BoxEncodingPredictor_depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_1/BoxEncodingPredictor_depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "BoxPredictor_1/BoxEncodingPredictor_depthwise/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 480
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_1/BoxEncodingPredictor_depthwise/BatchNorm/gamma/read"
  op: "Identity"
  input: "BoxPredictor_1/BoxEncodingPredictor_depthwise/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_1/BoxEncodingPredictor_depthwise/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "BoxPredictor_1/BoxEncodingPredictor_depthwise/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 480
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_1/BoxEncodingPredictor_depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "BoxPredictor_1/BoxEncodingPredictor_depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_1/BoxEncodingPredictor_depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "BoxPredictor_1/BoxEncodingPredictor_depthwise/depthwise_weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 480
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_1/BoxEncodingPredictor_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "BoxPredictor_1/BoxEncodingPredictor_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_1/BoxEncodingPredictor_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "BoxPredictor_0/Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_0/ClassPredictor/biases"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 273
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_0/ClassPredictor/biases/read"
  op: "Identity"
  input: "BoxPredictor_0/ClassPredictor/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_0/ClassPredictor/biases"
      }
    }
  }
}
node {
  name: "BoxPredictor_0/ClassPredictor/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 672
          }
          dim {
            size: 273
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_0/ClassPredictor/weights/read"
  op: "Identity"
  input: "BoxPredictor_0/ClassPredictor/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_0/ClassPredictor/weights"
      }
    }
  }
}
node {
  name: "BoxPredictor_0/ClassPredictor_depthwise/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 672
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_0/ClassPredictor_depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "BoxPredictor_0/ClassPredictor_depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_0/ClassPredictor_depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "BoxPredictor_0/ClassPredictor_depthwise/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 672
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_0/ClassPredictor_depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "BoxPredictor_0/ClassPredictor_depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_0/ClassPredictor_depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "BoxPredictor_0/ClassPredictor_depthwise/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 672
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_0/ClassPredictor_depthwise/BatchNorm/gamma/read"
  op: "Identity"
  input: "BoxPredictor_0/ClassPredictor_depthwise/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_0/ClassPredictor_depthwise/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "BoxPredictor_0/ClassPredictor_depthwise/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 672
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_0/ClassPredictor_depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "BoxPredictor_0/ClassPredictor_depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_0/ClassPredictor_depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "BoxPredictor_0/ClassPredictor_depthwise/depthwise_weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 672
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_0/ClassPredictor_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "BoxPredictor_0/ClassPredictor_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_0/ClassPredictor_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "BoxPredictor_0/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_0/BoxEncodingPredictor/biases"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_0/BoxEncodingPredictor/biases/read"
  op: "Identity"
  input: "BoxPredictor_0/BoxEncodingPredictor/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_0/BoxEncodingPredictor/biases"
      }
    }
  }
}
node {
  name: "BoxPredictor_0/BoxEncodingPredictor/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 672
          }
          dim {
            size: 12
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_0/BoxEncodingPredictor/weights/read"
  op: "Identity"
  input: "BoxPredictor_0/BoxEncodingPredictor/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_0/BoxEncodingPredictor/weights"
      }
    }
  }
}
node {
  name: "BoxPredictor_0/BoxEncodingPredictor_depthwise/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 672
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_0/BoxEncodingPredictor_depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "BoxPredictor_0/BoxEncodingPredictor_depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_0/BoxEncodingPredictor_depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "BoxPredictor_0/BoxEncodingPredictor_depthwise/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 672
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_0/BoxEncodingPredictor_depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "BoxPredictor_0/BoxEncodingPredictor_depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_0/BoxEncodingPredictor_depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "BoxPredictor_0/BoxEncodingPredictor_depthwise/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 672
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_0/BoxEncodingPredictor_depthwise/BatchNorm/gamma/read"
  op: "Identity"
  input: "BoxPredictor_0/BoxEncodingPredictor_depthwise/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_0/BoxEncodingPredictor_depthwise/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "BoxPredictor_0/BoxEncodingPredictor_depthwise/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 672
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_0/BoxEncodingPredictor_depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "BoxPredictor_0/BoxEncodingPredictor_depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_0/BoxEncodingPredictor_depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "BoxPredictor_0/BoxEncodingPredictor_depthwise/depthwise_weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 672
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "BoxPredictor_0/BoxEncodingPredictor_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "BoxPredictor_0/BoxEncodingPredictor_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@BoxPredictor_0/BoxEncodingPredictor_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_5_3x3_s2_128/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_5_3x3_s2_128/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_5_3x3_s2_128/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_5_3x3_s2_128/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_5_3x3_s2_128/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_5_3x3_s2_128/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_5_3x3_s2_128/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_5_3x3_s2_128/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_5_3x3_s2_128/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_5_3x3_s2_128/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_5_3x3_s2_128/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_5_3x3_s2_128/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_5_3x3_s2_128_depthwise/depthwise_weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_5_3x3_s2_128_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_5_3x3_s2_128_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_5_3x3_s2_128_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_5_1x1_64/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_5_1x1_64/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_5_1x1_64/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_5_1x1_64/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_5_1x1_64/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_5_1x1_64/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_5_1x1_64/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_5_1x1_64/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_5_1x1_64/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_5_1x1_64/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_5_1x1_64/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_5_1x1_64/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_5_1x1_64/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_5_1x1_64/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_5_1x1_64/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_5_1x1_64/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_5_1x1_64/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_5_1x1_64/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_5_1x1_64/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_5_1x1_64/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_4_3x3_s2_256/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_4_3x3_s2_256/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_4_3x3_s2_256/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_4_3x3_s2_256/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_4_3x3_s2_256/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_4_3x3_s2_256/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_4_3x3_s2_256/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_4_3x3_s2_256/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_4_3x3_s2_256/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_4_3x3_s2_256/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_4_3x3_s2_256/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_4_3x3_s2_256/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_4_3x3_s2_256_depthwise/depthwise_weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_4_3x3_s2_256_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_4_3x3_s2_256_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_4_3x3_s2_256_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_4_1x1_128/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_4_1x1_128/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_4_1x1_128/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_4_1x1_128/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_4_1x1_128/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_4_1x1_128/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_4_1x1_128/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_4_1x1_128/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_4_1x1_128/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_4_1x1_128/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_4_1x1_128/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_4_1x1_128/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_4_1x1_128/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_4_1x1_128/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_4_1x1_128/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_4_1x1_128/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_4_1x1_128/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_4_1x1_128/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_4_1x1_128/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_4_1x1_128/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_3_3x3_s2_256/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_3_3x3_s2_256/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_3_3x3_s2_256/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_3_3x3_s2_256/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_3_3x3_s2_256/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_3_3x3_s2_256/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_3_3x3_s2_256/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_3_3x3_s2_256/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_3_3x3_s2_256/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 128
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_3_3x3_s2_256/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_3_3x3_s2_256/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_3_3x3_s2_256/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_3_3x3_s2_256_depthwise/depthwise_weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 128
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_3_3x3_s2_256_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_3_3x3_s2_256_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_3_3x3_s2_256_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_3_1x1_128/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_3_1x1_128/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_3_1x1_128/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_3_1x1_128/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_3_1x1_128/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_3_1x1_128/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_3_1x1_128/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_3_1x1_128/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_3_1x1_128/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_3_1x1_128/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_3_1x1_128/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_3_1x1_128/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_3_1x1_128/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_3_1x1_128/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_3_1x1_128/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_3_1x1_128/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_3_1x1_128/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 512
          }
          dim {
            size: 128
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_3_1x1_128/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_3_1x1_128/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_3_1x1_128/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_2_3x3_s2_512/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_2_3x3_s2_512/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_2_3x3_s2_512/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_2_3x3_s2_512/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_2_3x3_s2_512/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_2_3x3_s2_512/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_2_3x3_s2_512/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_2_3x3_s2_512/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_2_3x3_s2_512/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 256
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_2_3x3_s2_512/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_2_3x3_s2_512/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_2_3x3_s2_512/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_2_3x3_s2_512_depthwise/depthwise_weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 256
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_2_3x3_s2_512_depthwise/depthwise_weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_2_3x3_s2_512_depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_2_3x3_s2_512_depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_2_1x1_256/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_2_1x1_256/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_2_1x1_256/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_2_1x1_256/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_2_1x1_256/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_2_1x1_256/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_2_1x1_256/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_2_1x1_256/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_2_1x1_256/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_2_1x1_256/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_2_1x1_256/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_2_1x1_256/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_2_1x1_256/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_2_1x1_256/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_2_1x1_256/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_2_1x1_256/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_2_1x1_256/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 480
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_2_1x1_256/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_2_1x1_256/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_2_1x1_256/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/Conv_1/hard_swish/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.166666672
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/Conv_1/hard_swish/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/Conv_1/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 480
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/Conv_1/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/Conv_1/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/Conv_1/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/Conv_1/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 480
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/Conv_1/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/Conv_1/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/Conv_1/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/Conv_1/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 480
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/Conv_1/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/Conv_1/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/Conv_1/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/Conv_1/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 480
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/Conv_1/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/Conv_1/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/Conv_1/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/Conv_1/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 80
          }
          dim {
            size: 480
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/Conv_1/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/Conv_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/Conv_1/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_14/project/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 80
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_14/project/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_14/project/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_14/project/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_14/project/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 80
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_14/project/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_14/project/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_14/project/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_14/project/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 80
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_14/project/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_14/project/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_14/project/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_14/project/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 80
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_14/project/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_14/project/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_14/project/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_14/project/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 480
          }
          dim {
            size: 80
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_14/project/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_14/project/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_14/project/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_14/squeeze_excite/Conv_1/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.16667
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_14/squeeze_excite/Conv_1/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_14/squeeze_excite/Conv_1/biases"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 480
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_14/squeeze_excite/Conv_1/biases/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_14/squeeze_excite/Conv_1/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_14/squeeze_excite/Conv_1/biases"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_14/squeeze_excite/Conv_1/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 120
          }
          dim {
            size: 480
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_14/squeeze_excite/Conv_1/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_14/squeeze_excite/Conv_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_14/squeeze_excite/Conv_1/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_14/squeeze_excite/Conv/biases"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_14/squeeze_excite/Conv/biases/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_14/squeeze_excite/Conv/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_14/squeeze_excite/Conv/biases"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_14/squeeze_excite/Conv/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 480
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_14/squeeze_excite/Conv/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_14/squeeze_excite/Conv/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_14/squeeze_excite/Conv/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_14/squeeze_excite/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_14/depthwise/hard_swish/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.166666672
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_14/depthwise/hard_swish/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_14/depthwise/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 480
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_14/depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_14/depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_14/depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_14/depthwise/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 480
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_14/depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_14/depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_14/depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_14/depthwise/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 480
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_14/depthwise/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_14/depthwise/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_14/depthwise/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_14/depthwise/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 480
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_14/depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_14/depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_14/depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_14/depthwise/depthwise_weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 480
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_14/depthwise/depthwise_weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_14/depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_14/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_14/expand/hard_swish/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.166666672
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_14/expand/hard_swish/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_14/expand/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 480
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_14/expand/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_14/expand/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_14/expand/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_14/expand/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 480
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_14/expand/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_14/expand/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_14/expand/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_14/expand/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 480
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_14/expand/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_14/expand/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_14/expand/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_14/expand/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 480
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_14/expand/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_14/expand/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_14/expand/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_14/expand/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 80
          }
          dim {
            size: 480
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_14/expand/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_14/expand/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_14/expand/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_13/project/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 80
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_13/project/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_13/project/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_13/project/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_13/project/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 80
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_13/project/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_13/project/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_13/project/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_13/project/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 80
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_13/project/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_13/project/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_13/project/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_13/project/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 80
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_13/project/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_13/project/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_13/project/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_13/project/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 480
          }
          dim {
            size: 80
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_13/project/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_13/project/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_13/project/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_13/squeeze_excite/Conv_1/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.16667
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_13/squeeze_excite/Conv_1/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_13/squeeze_excite/Conv_1/biases"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 480
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_13/squeeze_excite/Conv_1/biases/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_13/squeeze_excite/Conv_1/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_13/squeeze_excite/Conv_1/biases"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_13/squeeze_excite/Conv_1/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 120
          }
          dim {
            size: 480
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_13/squeeze_excite/Conv_1/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_13/squeeze_excite/Conv_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_13/squeeze_excite/Conv_1/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_13/squeeze_excite/Conv/biases"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_13/squeeze_excite/Conv/biases/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_13/squeeze_excite/Conv/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_13/squeeze_excite/Conv/biases"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_13/squeeze_excite/Conv/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 480
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_13/squeeze_excite/Conv/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_13/squeeze_excite/Conv/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_13/squeeze_excite/Conv/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_13/squeeze_excite/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_13/depthwise/hard_swish/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.166666672
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_13/depthwise/hard_swish/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_13/depthwise/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 480
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_13/depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_13/depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_13/depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_13/depthwise/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 480
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_13/depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_13/depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_13/depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_13/depthwise/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 480
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_13/depthwise/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_13/depthwise/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_13/depthwise/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_13/depthwise/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 480
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_13/depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_13/depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_13/depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_13/depthwise/depthwise_weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 480
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_13/depthwise/depthwise_weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_13/depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_13/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_13/expand/hard_swish/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.166666672
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_13/expand/hard_swish/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_13/expand/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 480
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_13/expand/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_13/expand/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_13/expand/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_13/expand/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 480
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_13/expand/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_13/expand/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_13/expand/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_13/expand/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 480
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_13/expand/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_13/expand/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_13/expand/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_13/expand/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 480
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_13/expand/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_13/expand/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_13/expand/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_13/expand/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 80
          }
          dim {
            size: 480
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_13/expand/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_13/expand/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_13/expand/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_12/project/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 80
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_12/project/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_12/project/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_12/project/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_12/project/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 80
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_12/project/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_12/project/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_12/project/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_12/project/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 80
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_12/project/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_12/project/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_12/project/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_12/project/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 80
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_12/project/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_12/project/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_12/project/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_12/project/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 672
          }
          dim {
            size: 80
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_12/project/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_12/project/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_12/project/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_12/squeeze_excite/Conv_1/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.16667
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_12/squeeze_excite/Conv_1/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_12/squeeze_excite/Conv_1/biases"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 672
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_12/squeeze_excite/Conv_1/biases/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_12/squeeze_excite/Conv_1/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_12/squeeze_excite/Conv_1/biases"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_12/squeeze_excite/Conv_1/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 168
          }
          dim {
            size: 672
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_12/squeeze_excite/Conv_1/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_12/squeeze_excite/Conv_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_12/squeeze_excite/Conv_1/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_12/squeeze_excite/Conv/biases"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 168
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_12/squeeze_excite/Conv/biases/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_12/squeeze_excite/Conv/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_12/squeeze_excite/Conv/biases"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_12/squeeze_excite/Conv/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 672
          }
          dim {
            size: 168
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_12/squeeze_excite/Conv/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_12/squeeze_excite/Conv/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_12/squeeze_excite/Conv/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_12/squeeze_excite/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_12/depthwise/hard_swish/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.166666672
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_12/depthwise/hard_swish/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_12/depthwise/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 672
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_12/depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_12/depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_12/depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_12/depthwise/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 672
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_12/depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_12/depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_12/depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_12/depthwise/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 672
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_12/depthwise/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_12/depthwise/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_12/depthwise/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_12/depthwise/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 672
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_12/depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_12/depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_12/depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_12/depthwise/depthwise_weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 672
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_12/depthwise/depthwise_weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_12/depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_12/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_12/expand/hard_swish/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.166666672
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_12/expand/hard_swish/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_12/expand/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 672
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_12/expand/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_12/expand/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_12/expand/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_12/expand/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 672
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_12/expand/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_12/expand/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_12/expand/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_12/expand/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 672
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_12/expand/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_12/expand/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_12/expand/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_12/expand/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 672
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_12/expand/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_12/expand/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_12/expand/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_12/expand/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 112
          }
          dim {
            size: 672
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_12/expand/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_12/expand/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_12/expand/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_11/project/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 112
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_11/project/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_11/project/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_11/project/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_11/project/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 112
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_11/project/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_11/project/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_11/project/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_11/project/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 112
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_11/project/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_11/project/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_11/project/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_11/project/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 112
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_11/project/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_11/project/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_11/project/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_11/project/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 672
          }
          dim {
            size: 112
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_11/project/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_11/project/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_11/project/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_11/squeeze_excite/Conv_1/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.16667
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_11/squeeze_excite/Conv_1/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_11/squeeze_excite/Conv_1/biases"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 672
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_11/squeeze_excite/Conv_1/biases/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_11/squeeze_excite/Conv_1/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_11/squeeze_excite/Conv_1/biases"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_11/squeeze_excite/Conv_1/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 168
          }
          dim {
            size: 672
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_11/squeeze_excite/Conv_1/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_11/squeeze_excite/Conv_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_11/squeeze_excite/Conv_1/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_11/squeeze_excite/Conv/biases"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 168
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_11/squeeze_excite/Conv/biases/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_11/squeeze_excite/Conv/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_11/squeeze_excite/Conv/biases"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_11/squeeze_excite/Conv/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 672
          }
          dim {
            size: 168
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_11/squeeze_excite/Conv/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_11/squeeze_excite/Conv/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_11/squeeze_excite/Conv/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_11/squeeze_excite/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_11/depthwise/hard_swish/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.166666672
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_11/depthwise/hard_swish/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_11/depthwise/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 672
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_11/depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_11/depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_11/depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_11/depthwise/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 672
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_11/depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_11/depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_11/depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_11/depthwise/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 672
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_11/depthwise/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_11/depthwise/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_11/depthwise/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_11/depthwise/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 672
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_11/depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_11/depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_11/depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_11/depthwise/depthwise_weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 672
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_11/depthwise/depthwise_weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_11/depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_11/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_11/expand/hard_swish/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.166666672
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_11/expand/hard_swish/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_11/expand/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 672
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_11/expand/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_11/expand/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_11/expand/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_11/expand/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 672
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_11/expand/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_11/expand/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_11/expand/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_11/expand/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 672
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_11/expand/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_11/expand/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_11/expand/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_11/expand/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 672
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_11/expand/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_11/expand/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_11/expand/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_11/expand/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 112
          }
          dim {
            size: 672
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_11/expand/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_11/expand/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_11/expand/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_10/project/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 112
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_10/project/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_10/project/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_10/project/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_10/project/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 112
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_10/project/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_10/project/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_10/project/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_10/project/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 112
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_10/project/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_10/project/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_10/project/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_10/project/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 112
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_10/project/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_10/project/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_10/project/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_10/project/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 480
          }
          dim {
            size: 112
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_10/project/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_10/project/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_10/project/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_10/squeeze_excite/Conv_1/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.16667
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_10/squeeze_excite/Conv_1/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_10/squeeze_excite/Conv_1/biases"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 480
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_10/squeeze_excite/Conv_1/biases/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_10/squeeze_excite/Conv_1/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_10/squeeze_excite/Conv_1/biases"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_10/squeeze_excite/Conv_1/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 120
          }
          dim {
            size: 480
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_10/squeeze_excite/Conv_1/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_10/squeeze_excite/Conv_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_10/squeeze_excite/Conv_1/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_10/squeeze_excite/Conv/biases"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_10/squeeze_excite/Conv/biases/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_10/squeeze_excite/Conv/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_10/squeeze_excite/Conv/biases"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_10/squeeze_excite/Conv/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 480
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_10/squeeze_excite/Conv/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_10/squeeze_excite/Conv/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_10/squeeze_excite/Conv/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_10/squeeze_excite/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_10/depthwise/hard_swish/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.166666672
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_10/depthwise/hard_swish/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_10/depthwise/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 480
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_10/depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_10/depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_10/depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_10/depthwise/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 480
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_10/depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_10/depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_10/depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_10/depthwise/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 480
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_10/depthwise/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_10/depthwise/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_10/depthwise/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_10/depthwise/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 480
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_10/depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_10/depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_10/depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_10/depthwise/depthwise_weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 480
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_10/depthwise/depthwise_weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_10/depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_10/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_10/expand/hard_swish/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.166666672
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_10/expand/hard_swish/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_10/expand/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 480
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_10/expand/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_10/expand/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_10/expand/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_10/expand/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 480
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_10/expand/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_10/expand/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_10/expand/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_10/expand/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 480
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_10/expand/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_10/expand/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_10/expand/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_10/expand/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 480
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_10/expand/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_10/expand/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_10/expand/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_10/expand/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 80
          }
          dim {
            size: 480
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_10/expand/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_10/expand/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_10/expand/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_9/project/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 80
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_9/project/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_9/project/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_9/project/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_9/project/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 80
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_9/project/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_9/project/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_9/project/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_9/project/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 80
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_9/project/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_9/project/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_9/project/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_9/project/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 80
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_9/project/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_9/project/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_9/project/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_9/project/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 184
          }
          dim {
            size: 80
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_9/project/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_9/project/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_9/project/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_9/depthwise/hard_swish/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.166666672
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_9/depthwise/hard_swish/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_9/depthwise/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 184
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_9/depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_9/depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_9/depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_9/depthwise/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 184
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_9/depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_9/depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_9/depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_9/depthwise/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 184
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_9/depthwise/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_9/depthwise/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_9/depthwise/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_9/depthwise/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 184
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_9/depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_9/depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_9/depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_9/depthwise/depthwise_weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 184
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_9/depthwise/depthwise_weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_9/depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_9/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_9/expand/hard_swish/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.166666672
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_9/expand/hard_swish/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_9/expand/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 184
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_9/expand/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_9/expand/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_9/expand/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_9/expand/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 184
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_9/expand/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_9/expand/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_9/expand/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_9/expand/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 184
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_9/expand/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_9/expand/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_9/expand/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_9/expand/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 184
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_9/expand/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_9/expand/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_9/expand/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_9/expand/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 80
          }
          dim {
            size: 184
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_9/expand/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_9/expand/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_9/expand/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_8/project/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 80
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_8/project/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_8/project/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_8/project/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_8/project/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 80
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_8/project/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_8/project/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_8/project/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_8/project/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 80
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_8/project/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_8/project/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_8/project/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_8/project/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 80
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_8/project/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_8/project/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_8/project/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_8/project/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 184
          }
          dim {
            size: 80
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_8/project/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_8/project/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_8/project/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_8/depthwise/hard_swish/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.166666672
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_8/depthwise/hard_swish/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_8/depthwise/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 184
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_8/depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_8/depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_8/depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_8/depthwise/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 184
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_8/depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_8/depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_8/depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_8/depthwise/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 184
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_8/depthwise/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_8/depthwise/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_8/depthwise/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_8/depthwise/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 184
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_8/depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_8/depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_8/depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_8/depthwise/depthwise_weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 184
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_8/depthwise/depthwise_weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_8/depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_8/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_8/expand/hard_swish/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.166666672
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_8/expand/hard_swish/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_8/expand/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 184
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_8/expand/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_8/expand/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_8/expand/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_8/expand/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 184
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_8/expand/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_8/expand/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_8/expand/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_8/expand/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 184
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_8/expand/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_8/expand/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_8/expand/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_8/expand/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 184
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_8/expand/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_8/expand/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_8/expand/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_8/expand/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 80
          }
          dim {
            size: 184
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_8/expand/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_8/expand/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_8/expand/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_7/project/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 80
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_7/project/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_7/project/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_7/project/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_7/project/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 80
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_7/project/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_7/project/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_7/project/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_7/project/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 80
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_7/project/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_7/project/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_7/project/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_7/project/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 80
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_7/project/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_7/project/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_7/project/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_7/project/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 200
          }
          dim {
            size: 80
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_7/project/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_7/project/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_7/project/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_7/depthwise/hard_swish/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.166666672
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_7/depthwise/hard_swish/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_7/depthwise/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_7/depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_7/depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_7/depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_7/depthwise/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_7/depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_7/depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_7/depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_7/depthwise/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_7/depthwise/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_7/depthwise/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_7/depthwise/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_7/depthwise/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_7/depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_7/depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_7/depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_7/depthwise/depthwise_weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 200
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_7/depthwise/depthwise_weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_7/depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_7/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_7/expand/hard_swish/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.166666672
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_7/expand/hard_swish/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_7/expand/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_7/expand/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_7/expand/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_7/expand/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_7/expand/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_7/expand/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_7/expand/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_7/expand/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_7/expand/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_7/expand/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_7/expand/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_7/expand/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_7/expand/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_7/expand/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_7/expand/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_7/expand/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_7/expand/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 80
          }
          dim {
            size: 200
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_7/expand/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_7/expand/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_7/expand/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_6/project/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 80
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_6/project/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_6/project/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_6/project/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_6/project/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 80
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_6/project/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_6/project/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_6/project/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_6/project/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 80
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_6/project/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_6/project/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_6/project/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_6/project/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 80
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_6/project/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_6/project/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_6/project/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_6/project/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 240
          }
          dim {
            size: 80
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_6/project/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_6/project/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_6/project/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_6/depthwise/hard_swish/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.166666672
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_6/depthwise/hard_swish/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_6/depthwise/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 240
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_6/depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_6/depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_6/depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_6/depthwise/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 240
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_6/depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_6/depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_6/depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_6/depthwise/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 240
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_6/depthwise/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_6/depthwise/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_6/depthwise/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_6/depthwise/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 240
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_6/depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_6/depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_6/depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_6/depthwise/depthwise_weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 240
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_6/depthwise/depthwise_weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_6/depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_6/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_6/expand/hard_swish/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.166666672
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_6/expand/hard_swish/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_6/expand/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 240
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_6/expand/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_6/expand/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_6/expand/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_6/expand/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 240
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_6/expand/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_6/expand/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_6/expand/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_6/expand/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 240
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_6/expand/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_6/expand/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_6/expand/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_6/expand/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 240
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_6/expand/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_6/expand/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_6/expand/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_6/expand/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 40
          }
          dim {
            size: 240
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_6/expand/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_6/expand/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_6/expand/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_5/project/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_5/project/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_5/project/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_5/project/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_5/project/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_5/project/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_5/project/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_5/project/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_5/project/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_5/project/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_5/project/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_5/project/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_5/project/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_5/project/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_5/project/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_5/project/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_5/project/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 120
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_5/project/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_5/project/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_5/project/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_5/squeeze_excite/Conv_1/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.16667
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_5/squeeze_excite/Conv_1/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_5/squeeze_excite/Conv_1/biases"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_5/squeeze_excite/Conv_1/biases/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_5/squeeze_excite/Conv_1/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_5/squeeze_excite/Conv_1/biases"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_5/squeeze_excite/Conv_1/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_5/squeeze_excite/Conv_1/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_5/squeeze_excite/Conv_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_5/squeeze_excite/Conv_1/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_5/squeeze_excite/Conv/biases"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_5/squeeze_excite/Conv/biases/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_5/squeeze_excite/Conv/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_5/squeeze_excite/Conv/biases"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_5/squeeze_excite/Conv/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 120
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_5/squeeze_excite/Conv/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_5/squeeze_excite/Conv/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_5/squeeze_excite/Conv/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_5/squeeze_excite/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_5/depthwise/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_5/depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_5/depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_5/depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_5/depthwise/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_5/depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_5/depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_5/depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_5/depthwise/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_5/depthwise/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_5/depthwise/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_5/depthwise/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_5/depthwise/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_5/depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_5/depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_5/depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_5/depthwise/depthwise_weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 120
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_5/depthwise/depthwise_weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_5/depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_5/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_5/expand/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_5/expand/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_5/expand/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_5/expand/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_5/expand/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_5/expand/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_5/expand/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_5/expand/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_5/expand/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_5/expand/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_5/expand/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_5/expand/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_5/expand/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_5/expand/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_5/expand/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_5/expand/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_5/expand/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 40
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_5/expand/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_5/expand/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_5/expand/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_4/project/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_4/project/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_4/project/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_4/project/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_4/project/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_4/project/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_4/project/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_4/project/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_4/project/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_4/project/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_4/project/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_4/project/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_4/project/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_4/project/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_4/project/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_4/project/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_4/project/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 120
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_4/project/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_4/project/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_4/project/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_4/squeeze_excite/Conv_1/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.16667
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_4/squeeze_excite/Conv_1/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_4/squeeze_excite/Conv_1/biases"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_4/squeeze_excite/Conv_1/biases/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_4/squeeze_excite/Conv_1/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_4/squeeze_excite/Conv_1/biases"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_4/squeeze_excite/Conv_1/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 32
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_4/squeeze_excite/Conv_1/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_4/squeeze_excite/Conv_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_4/squeeze_excite/Conv_1/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_4/squeeze_excite/Conv/biases"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_4/squeeze_excite/Conv/biases/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_4/squeeze_excite/Conv/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_4/squeeze_excite/Conv/biases"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_4/squeeze_excite/Conv/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 120
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_4/squeeze_excite/Conv/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_4/squeeze_excite/Conv/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_4/squeeze_excite/Conv/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_4/squeeze_excite/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_4/depthwise/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_4/depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_4/depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_4/depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_4/depthwise/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_4/depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_4/depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_4/depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_4/depthwise/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_4/depthwise/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_4/depthwise/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_4/depthwise/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_4/depthwise/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_4/depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_4/depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_4/depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_4/depthwise/depthwise_weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 120
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_4/depthwise/depthwise_weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_4/depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_4/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_4/expand/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_4/expand/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_4/expand/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_4/expand/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_4/expand/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_4/expand/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_4/expand/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_4/expand/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_4/expand/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_4/expand/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_4/expand/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_4/expand/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_4/expand/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_4/expand/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_4/expand/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_4/expand/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_4/expand/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 40
          }
          dim {
            size: 120
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_4/expand/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_4/expand/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_4/expand/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_3/project/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_3/project/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_3/project/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_3/project/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_3/project/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_3/project/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_3/project/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_3/project/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_3/project/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_3/project/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_3/project/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_3/project/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_3/project/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_3/project/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_3/project/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_3/project/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_3/project/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 72
          }
          dim {
            size: 40
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_3/project/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_3/project/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_3/project/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_3/squeeze_excite/Conv_1/mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.16667
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_3/squeeze_excite/Conv_1/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_3/squeeze_excite/Conv_1/biases"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 72
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_3/squeeze_excite/Conv_1/biases/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_3/squeeze_excite/Conv_1/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_3/squeeze_excite/Conv_1/biases"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_3/squeeze_excite/Conv_1/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 24
          }
          dim {
            size: 72
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_3/squeeze_excite/Conv_1/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_3/squeeze_excite/Conv_1/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_3/squeeze_excite/Conv_1/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_3/squeeze_excite/Conv/biases"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_3/squeeze_excite/Conv/biases/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_3/squeeze_excite/Conv/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_3/squeeze_excite/Conv/biases"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_3/squeeze_excite/Conv/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 72
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_3/squeeze_excite/Conv/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_3/squeeze_excite/Conv/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_3/squeeze_excite/Conv/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_3/squeeze_excite/Mean/reduction_indices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_3/depthwise/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 72
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_3/depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_3/depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_3/depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_3/depthwise/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 72
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_3/depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_3/depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_3/depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_3/depthwise/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 72
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_3/depthwise/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_3/depthwise/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_3/depthwise/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_3/depthwise/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 72
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_3/depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_3/depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_3/depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_3/depthwise/depthwise_weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 5
          }
          dim {
            size: 5
          }
          dim {
            size: 72
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_3/depthwise/depthwise_weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_3/depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_3/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_3/expand/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 72
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_3/expand/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_3/expand/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_3/expand/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_3/expand/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 72
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_3/expand/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_3/expand/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_3/expand/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_3/expand/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 72
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_3/expand/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_3/expand/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_3/expand/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_3/expand/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 72
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_3/expand/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_3/expand/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_3/expand/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_3/expand/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 24
          }
          dim {
            size: 72
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_3/expand/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_3/expand/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_3/expand/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_2/project/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_2/project/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_2/project/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_2/project/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_2/project/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_2/project/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_2/project/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_2/project/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_2/project/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_2/project/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_2/project/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_2/project/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_2/project/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_2/project/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_2/project/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_2/project/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_2/project/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 72
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_2/project/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_2/project/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_2/project/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_2/depthwise/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 72
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_2/depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_2/depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_2/depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_2/depthwise/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 72
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_2/depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_2/depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_2/depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_2/depthwise/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 72
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_2/depthwise/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_2/depthwise/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_2/depthwise/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_2/depthwise/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 72
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_2/depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_2/depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_2/depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_2/depthwise/depthwise_weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 72
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_2/depthwise/depthwise_weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_2/depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_2/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_2/expand/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 72
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_2/expand/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_2/expand/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_2/expand/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_2/expand/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 72
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_2/expand/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_2/expand/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_2/expand/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_2/expand/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 72
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_2/expand/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_2/expand/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_2/expand/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_2/expand/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 72
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_2/expand/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_2/expand/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_2/expand/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_2/expand/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 24
          }
          dim {
            size: 72
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_2/expand/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_2/expand/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_2/expand/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_1/project/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_1/project/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_1/project/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_1/project/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_1/project/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_1/project/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_1/project/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_1/project/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_1/project/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_1/project/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_1/project/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_1/project/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_1/project/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_1/project/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_1/project/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_1/project/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_1/project/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 64
          }
          dim {
            size: 24
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_1/project/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_1/project/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_1/project/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_1/depthwise/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_1/depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_1/depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_1/depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_1/depthwise/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_1/depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_1/depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_1/depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_1/depthwise/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_1/depthwise/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_1/depthwise/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_1/depthwise/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_1/depthwise/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_1/depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_1/depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_1/depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_1/depthwise/depthwise_weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 64
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_1/depthwise/depthwise_weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_1/depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_1/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_1/expand/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_1/expand/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_1/expand/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_1/expand/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_1/expand/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_1/expand/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_1/expand/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_1/expand/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_1/expand/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_1/expand/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_1/expand/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_1/expand/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_1/expand/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_1/expand/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_1/expand/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_1/expand/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_1/expand/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 64
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_1/expand/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_1/expand/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv_1/expand/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv/project/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv/project/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv/project/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv/project/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv/project/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv/project/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv/project/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv/project/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv/project/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv/project/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv/project/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv/project/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv/project/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv/project/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv/project/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv/project/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv/project/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
          dim {
            size: 16
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv/project/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv/project/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv/project/weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv/depthwise/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv/depthwise/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv/depthwise/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv/depthwise/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv/depthwise/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv/depthwise/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv/depthwise/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv/depthwise/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv/depthwise/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv/depthwise/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv/depthwise/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv/depthwise/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv/depthwise/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv/depthwise/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv/depthwise/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv/depthwise/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv/depthwise/depthwise_weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv/depthwise/depthwise_weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv/depthwise/depthwise_weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/expanded_conv/depthwise/depthwise_weights"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/Conv/hard_swish/mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.166666672
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/Conv/hard_swish/add/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/Conv/BatchNorm/moving_variance"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/Conv/BatchNorm/moving_variance/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/Conv/BatchNorm/moving_variance"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/Conv/BatchNorm/moving_variance"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/Conv/BatchNorm/moving_mean"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/Conv/BatchNorm/moving_mean/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/Conv/BatchNorm/moving_mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/Conv/BatchNorm/moving_mean"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/Conv/BatchNorm/gamma"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/Conv/BatchNorm/gamma/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/Conv/BatchNorm/gamma"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/Conv/BatchNorm/gamma"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/Conv/BatchNorm/beta"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/Conv/BatchNorm/beta/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/Conv/BatchNorm/beta"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/Conv/BatchNorm/beta"
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/Conv/weights"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 3
          }
          dim {
            size: 16
          }
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/Conv/weights/read"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/Conv/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@FeatureExtractor/MobilenetV3/Conv/weights"
      }
    }
  }
}
node {
  name: "normalized_input_image_tensor"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
        dim {
          size: 320
        }
        dim {
          size: 320
        }
        dim {
          size: 3
        }
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/MobilenetV3/input"
  op: "Identity"
  input: "normalized_input_image_tensor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/Conv/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV3/MobilenetV3/input"
  input: "FeatureExtractor/MobilenetV3/Conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/Conv/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/Conv/Conv2D"
  input: "FeatureExtractor/MobilenetV3/Conv/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV3/Conv/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV3/Conv/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV3/Conv/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/Conv/hard_swish/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV3/Conv/BatchNorm/FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/Conv/hard_swish/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/Conv/hard_swish/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV3/Conv/hard_swish/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/Conv/hard_swish/mul"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV3/Conv/BatchNorm/FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/Conv/hard_swish/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/Conv/hard_swish/mul_1"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV3/Conv/hard_swish/mul"
  input: "FeatureExtractor/MobilenetV3/Conv/hard_swish/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv/input"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/Conv/hard_swish/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv/depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "FeatureExtractor/MobilenetV3/expanded_conv/input"
  input: "FeatureExtractor/MobilenetV3/expanded_conv/depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv/depthwise/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/expanded_conv/depthwise/depthwise"
  input: "FeatureExtractor/MobilenetV3/expanded_conv/depthwise/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv/depthwise/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv/depthwise/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv/depthwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv/depthwise/Relu"
  op: "Relu"
  input: "FeatureExtractor/MobilenetV3/expanded_conv/depthwise/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv/depthwise_output"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv/depthwise/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv/project/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV3/expanded_conv/depthwise_output"
  input: "FeatureExtractor/MobilenetV3/expanded_conv/project/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv/project/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/expanded_conv/project/Conv2D"
  input: "FeatureExtractor/MobilenetV3/expanded_conv/project/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv/project/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv/project/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv/project/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv/project/Identity"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv/project/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV3/expanded_conv/project/Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv/input"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv/output"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_1/input"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv/output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_1/expand/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_1/input"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_1/expand/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_1/expand/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_1/expand/Conv2D"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_1/expand/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_1/expand/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_1/expand/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_1/expand/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_1/expand/Relu"
  op: "Relu"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_1/expand/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_1/expansion_output"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_1/expand/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_1/depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_1/expansion_output"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_1/depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_1/depthwise/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_1/depthwise/depthwise"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_1/depthwise/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_1/depthwise/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_1/depthwise/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_1/depthwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_1/depthwise/Relu"
  op: "Relu"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_1/depthwise/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_1/depthwise_output"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_1/depthwise/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_1/project/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_1/depthwise_output"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_1/project/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_1/project/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_1/project/Conv2D"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_1/project/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_1/project/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_1/project/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_1/project/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_1/project/Identity"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_1/project/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_1/output"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_1/project/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_2/input"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_1/output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_2/expand/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_2/input"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_2/expand/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_2/expand/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_2/expand/Conv2D"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_2/expand/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_2/expand/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_2/expand/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_2/expand/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_2/expand/Relu"
  op: "Relu"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_2/expand/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_2/expansion_output"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_2/expand/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_2/depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_2/expansion_output"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_2/depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_2/depthwise/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_2/depthwise/depthwise"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_2/depthwise/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_2/depthwise/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_2/depthwise/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_2/depthwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_2/depthwise/Relu"
  op: "Relu"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_2/depthwise/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_2/depthwise_output"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_2/depthwise/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_2/project/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_2/depthwise_output"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_2/project/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_2/project/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_2/project/Conv2D"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_2/project/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_2/project/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_2/project/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_2/project/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_2/project/Identity"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_2/project/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_2/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_2/project/Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_2/input"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_2/output"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_2/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_3/input"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_2/output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_3/expand/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_3/input"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_3/expand/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_3/expand/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_3/expand/Conv2D"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_3/expand/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_3/expand/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_3/expand/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_3/expand/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_3/expand/Relu"
  op: "Relu"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_3/expand/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_3/expansion_output"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_3/expand/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_3/depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_3/expansion_output"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_3/depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_3/depthwise/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_3/depthwise/depthwise"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_3/depthwise/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_3/depthwise/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_3/depthwise/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_3/depthwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_3/depthwise/Relu"
  op: "Relu"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_3/depthwise/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_3/depthwise_output"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_3/depthwise/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_3/squeeze_excite/Mean"
  op: "Mean"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_3/depthwise_output"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_3/squeeze_excite/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_3/squeeze_excite/Conv/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_3/squeeze_excite/Mean"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_3/squeeze_excite/Conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_3/squeeze_excite/Conv/BiasAdd"
  op: "BiasAdd"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_3/squeeze_excite/Conv/Conv2D"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_3/squeeze_excite/Conv/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_3/squeeze_excite/Conv/Relu"
  op: "Relu"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_3/squeeze_excite/Conv/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_3/squeeze_excite/Conv_1/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_3/squeeze_excite/Conv/Relu"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_3/squeeze_excite/Conv_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_3/squeeze_excite/Conv_1/BiasAdd"
  op: "BiasAdd"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_3/squeeze_excite/Conv_1/Conv2D"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_3/squeeze_excite/Conv_1/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_3/squeeze_excite/Conv_1/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_3/squeeze_excite/Conv_1/BiasAdd"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_3/squeeze_excite/Conv_1/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_3/squeeze_excite/Conv_1/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_3/squeeze_excite/Conv_1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_3/squeeze_excite/Conv_1/mul"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_3/squeeze_excite/Conv_1/Relu6"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_3/squeeze_excite/Conv_1/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_3/squeeze_excite/mul"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_3/depthwise_output"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_3/squeeze_excite/Conv_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_3/project/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_3/squeeze_excite/mul"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_3/project/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_3/project/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_3/project/Conv2D"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_3/project/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_3/project/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_3/project/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_3/project/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_3/project/Identity"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_3/project/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_3/output"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_3/project/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_4/input"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_3/output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_4/expand/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_4/input"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_4/expand/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_4/expand/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_4/expand/Conv2D"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_4/expand/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_4/expand/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_4/expand/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_4/expand/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_4/expand/Relu"
  op: "Relu"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_4/expand/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_4/expansion_output"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_4/expand/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_4/depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_4/expansion_output"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_4/depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_4/depthwise/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_4/depthwise/depthwise"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_4/depthwise/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_4/depthwise/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_4/depthwise/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_4/depthwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_4/depthwise/Relu"
  op: "Relu"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_4/depthwise/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_4/depthwise_output"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_4/depthwise/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_4/squeeze_excite/Mean"
  op: "Mean"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_4/depthwise_output"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_4/squeeze_excite/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_4/squeeze_excite/Conv/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_4/squeeze_excite/Mean"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_4/squeeze_excite/Conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_4/squeeze_excite/Conv/BiasAdd"
  op: "BiasAdd"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_4/squeeze_excite/Conv/Conv2D"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_4/squeeze_excite/Conv/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_4/squeeze_excite/Conv/Relu"
  op: "Relu"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_4/squeeze_excite/Conv/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_4/squeeze_excite/Conv_1/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_4/squeeze_excite/Conv/Relu"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_4/squeeze_excite/Conv_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_4/squeeze_excite/Conv_1/BiasAdd"
  op: "BiasAdd"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_4/squeeze_excite/Conv_1/Conv2D"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_4/squeeze_excite/Conv_1/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_4/squeeze_excite/Conv_1/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_4/squeeze_excite/Conv_1/BiasAdd"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_4/squeeze_excite/Conv_1/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_4/squeeze_excite/Conv_1/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_4/squeeze_excite/Conv_1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_4/squeeze_excite/Conv_1/mul"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_4/squeeze_excite/Conv_1/Relu6"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_4/squeeze_excite/Conv_1/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_4/squeeze_excite/mul"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_4/depthwise_output"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_4/squeeze_excite/Conv_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_4/project/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_4/squeeze_excite/mul"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_4/project/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_4/project/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_4/project/Conv2D"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_4/project/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_4/project/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_4/project/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_4/project/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_4/project/Identity"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_4/project/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_4/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_4/project/Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_4/input"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_4/output"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_4/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_5/input"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_4/output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_5/expand/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_5/input"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_5/expand/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_5/expand/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_5/expand/Conv2D"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_5/expand/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_5/expand/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_5/expand/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_5/expand/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_5/expand/Relu"
  op: "Relu"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_5/expand/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_5/expansion_output"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_5/expand/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_5/depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_5/expansion_output"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_5/depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_5/depthwise/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_5/depthwise/depthwise"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_5/depthwise/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_5/depthwise/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_5/depthwise/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_5/depthwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_5/depthwise/Relu"
  op: "Relu"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_5/depthwise/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_5/depthwise_output"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_5/depthwise/Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_5/squeeze_excite/Mean"
  op: "Mean"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_5/depthwise_output"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_5/squeeze_excite/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_5/squeeze_excite/Conv/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_5/squeeze_excite/Mean"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_5/squeeze_excite/Conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_5/squeeze_excite/Conv/BiasAdd"
  op: "BiasAdd"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_5/squeeze_excite/Conv/Conv2D"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_5/squeeze_excite/Conv/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_5/squeeze_excite/Conv/Relu"
  op: "Relu"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_5/squeeze_excite/Conv/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_5/squeeze_excite/Conv_1/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_5/squeeze_excite/Conv/Relu"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_5/squeeze_excite/Conv_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_5/squeeze_excite/Conv_1/BiasAdd"
  op: "BiasAdd"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_5/squeeze_excite/Conv_1/Conv2D"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_5/squeeze_excite/Conv_1/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_5/squeeze_excite/Conv_1/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_5/squeeze_excite/Conv_1/BiasAdd"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_5/squeeze_excite/Conv_1/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_5/squeeze_excite/Conv_1/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_5/squeeze_excite/Conv_1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_5/squeeze_excite/Conv_1/mul"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_5/squeeze_excite/Conv_1/Relu6"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_5/squeeze_excite/Conv_1/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_5/squeeze_excite/mul"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_5/depthwise_output"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_5/squeeze_excite/Conv_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_5/project/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_5/squeeze_excite/mul"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_5/project/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_5/project/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_5/project/Conv2D"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_5/project/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_5/project/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_5/project/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_5/project/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_5/project/Identity"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_5/project/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_5/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_5/project/Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_5/input"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_5/output"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_5/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_6/input"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_5/output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_6/expand/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_6/input"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_6/expand/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_6/expand/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_6/expand/Conv2D"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_6/expand/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_6/expand/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_6/expand/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_6/expand/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_6/expand/hard_swish/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_6/expand/BatchNorm/FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_6/expand/hard_swish/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_6/expand/hard_swish/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_6/expand/hard_swish/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_6/expand/hard_swish/mul"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_6/expand/BatchNorm/FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_6/expand/hard_swish/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_6/expand/hard_swish/mul_1"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_6/expand/hard_swish/mul"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_6/expand/hard_swish/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_6/expansion_output"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_6/expand/hard_swish/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_6/depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_6/expansion_output"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_6/depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_6/depthwise/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_6/depthwise/depthwise"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_6/depthwise/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_6/depthwise/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_6/depthwise/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_6/depthwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_6/depthwise/hard_swish/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_6/depthwise/BatchNorm/FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_6/depthwise/hard_swish/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_6/depthwise/hard_swish/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_6/depthwise/hard_swish/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_6/depthwise/hard_swish/mul"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_6/depthwise/BatchNorm/FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_6/depthwise/hard_swish/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_6/depthwise/hard_swish/mul_1"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_6/depthwise/hard_swish/mul"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_6/depthwise/hard_swish/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_6/depthwise_output"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_6/depthwise/hard_swish/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_6/project/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_6/depthwise_output"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_6/project/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_6/project/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_6/project/Conv2D"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_6/project/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_6/project/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_6/project/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_6/project/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_6/project/Identity"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_6/project/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_6/output"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_6/project/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_7/input"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_6/output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_7/expand/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_7/input"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_7/expand/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_7/expand/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_7/expand/Conv2D"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_7/expand/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_7/expand/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_7/expand/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_7/expand/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_7/expand/hard_swish/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_7/expand/BatchNorm/FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_7/expand/hard_swish/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_7/expand/hard_swish/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_7/expand/hard_swish/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_7/expand/hard_swish/mul"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_7/expand/BatchNorm/FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_7/expand/hard_swish/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_7/expand/hard_swish/mul_1"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_7/expand/hard_swish/mul"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_7/expand/hard_swish/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_7/expansion_output"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_7/expand/hard_swish/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_7/depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_7/expansion_output"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_7/depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_7/depthwise/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_7/depthwise/depthwise"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_7/depthwise/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_7/depthwise/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_7/depthwise/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_7/depthwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_7/depthwise/hard_swish/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_7/depthwise/BatchNorm/FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_7/depthwise/hard_swish/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_7/depthwise/hard_swish/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_7/depthwise/hard_swish/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_7/depthwise/hard_swish/mul"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_7/depthwise/BatchNorm/FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_7/depthwise/hard_swish/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_7/depthwise/hard_swish/mul_1"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_7/depthwise/hard_swish/mul"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_7/depthwise/hard_swish/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_7/depthwise_output"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_7/depthwise/hard_swish/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_7/project/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_7/depthwise_output"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_7/project/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_7/project/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_7/project/Conv2D"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_7/project/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_7/project/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_7/project/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_7/project/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_7/project/Identity"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_7/project/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_7/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_7/project/Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_7/input"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_7/output"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_7/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_8/input"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_7/output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_8/expand/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_8/input"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_8/expand/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_8/expand/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_8/expand/Conv2D"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_8/expand/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_8/expand/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_8/expand/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_8/expand/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_8/expand/hard_swish/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_8/expand/BatchNorm/FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_8/expand/hard_swish/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_8/expand/hard_swish/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_8/expand/hard_swish/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_8/expand/hard_swish/mul"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_8/expand/BatchNorm/FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_8/expand/hard_swish/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_8/expand/hard_swish/mul_1"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_8/expand/hard_swish/mul"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_8/expand/hard_swish/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_8/expansion_output"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_8/expand/hard_swish/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_8/depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_8/expansion_output"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_8/depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_8/depthwise/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_8/depthwise/depthwise"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_8/depthwise/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_8/depthwise/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_8/depthwise/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_8/depthwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_8/depthwise/hard_swish/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_8/depthwise/BatchNorm/FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_8/depthwise/hard_swish/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_8/depthwise/hard_swish/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_8/depthwise/hard_swish/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_8/depthwise/hard_swish/mul"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_8/depthwise/BatchNorm/FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_8/depthwise/hard_swish/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_8/depthwise/hard_swish/mul_1"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_8/depthwise/hard_swish/mul"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_8/depthwise/hard_swish/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_8/depthwise_output"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_8/depthwise/hard_swish/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_8/project/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_8/depthwise_output"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_8/project/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_8/project/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_8/project/Conv2D"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_8/project/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_8/project/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_8/project/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_8/project/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_8/project/Identity"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_8/project/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_8/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_8/project/Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_8/input"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_8/output"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_8/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_9/input"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_8/output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_9/expand/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_9/input"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_9/expand/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_9/expand/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_9/expand/Conv2D"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_9/expand/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_9/expand/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_9/expand/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_9/expand/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_9/expand/hard_swish/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_9/expand/BatchNorm/FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_9/expand/hard_swish/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_9/expand/hard_swish/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_9/expand/hard_swish/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_9/expand/hard_swish/mul"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_9/expand/BatchNorm/FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_9/expand/hard_swish/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_9/expand/hard_swish/mul_1"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_9/expand/hard_swish/mul"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_9/expand/hard_swish/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_9/expansion_output"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_9/expand/hard_swish/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_9/depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_9/expansion_output"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_9/depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_9/depthwise/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_9/depthwise/depthwise"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_9/depthwise/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_9/depthwise/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_9/depthwise/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_9/depthwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_9/depthwise/hard_swish/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_9/depthwise/BatchNorm/FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_9/depthwise/hard_swish/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_9/depthwise/hard_swish/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_9/depthwise/hard_swish/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_9/depthwise/hard_swish/mul"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_9/depthwise/BatchNorm/FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_9/depthwise/hard_swish/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_9/depthwise/hard_swish/mul_1"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_9/depthwise/hard_swish/mul"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_9/depthwise/hard_swish/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_9/depthwise_output"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_9/depthwise/hard_swish/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_9/project/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_9/depthwise_output"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_9/project/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_9/project/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_9/project/Conv2D"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_9/project/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_9/project/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_9/project/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_9/project/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_9/project/Identity"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_9/project/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_9/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_9/project/Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_9/input"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_9/output"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_9/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_10/input"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_9/output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_10/expand/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_10/input"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_10/expand/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_10/expand/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_10/expand/Conv2D"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_10/expand/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_10/expand/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_10/expand/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_10/expand/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_10/expand/hard_swish/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_10/expand/BatchNorm/FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_10/expand/hard_swish/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_10/expand/hard_swish/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_10/expand/hard_swish/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_10/expand/hard_swish/mul"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_10/expand/BatchNorm/FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_10/expand/hard_swish/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_10/expand/hard_swish/mul_1"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_10/expand/hard_swish/mul"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_10/expand/hard_swish/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_10/expansion_output"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_10/expand/hard_swish/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_10/depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_10/expansion_output"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_10/depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_10/depthwise/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_10/depthwise/depthwise"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_10/depthwise/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_10/depthwise/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_10/depthwise/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_10/depthwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_10/depthwise/hard_swish/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_10/depthwise/BatchNorm/FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_10/depthwise/hard_swish/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_10/depthwise/hard_swish/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_10/depthwise/hard_swish/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_10/depthwise/hard_swish/mul"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_10/depthwise/BatchNorm/FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_10/depthwise/hard_swish/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_10/depthwise/hard_swish/mul_1"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_10/depthwise/hard_swish/mul"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_10/depthwise/hard_swish/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_10/depthwise_output"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_10/depthwise/hard_swish/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_10/squeeze_excite/Mean"
  op: "Mean"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_10/depthwise_output"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_10/squeeze_excite/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_10/squeeze_excite/Conv/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_10/squeeze_excite/Mean"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_10/squeeze_excite/Conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_10/squeeze_excite/Conv/BiasAdd"
  op: "BiasAdd"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_10/squeeze_excite/Conv/Conv2D"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_10/squeeze_excite/Conv/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_10/squeeze_excite/Conv/Relu"
  op: "Relu"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_10/squeeze_excite/Conv/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_10/squeeze_excite/Conv_1/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_10/squeeze_excite/Conv/Relu"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_10/squeeze_excite/Conv_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_10/squeeze_excite/Conv_1/BiasAdd"
  op: "BiasAdd"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_10/squeeze_excite/Conv_1/Conv2D"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_10/squeeze_excite/Conv_1/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_10/squeeze_excite/Conv_1/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_10/squeeze_excite/Conv_1/BiasAdd"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_10/squeeze_excite/Conv_1/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_10/squeeze_excite/Conv_1/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_10/squeeze_excite/Conv_1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_10/squeeze_excite/Conv_1/mul"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_10/squeeze_excite/Conv_1/Relu6"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_10/squeeze_excite/Conv_1/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_10/squeeze_excite/mul"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_10/depthwise_output"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_10/squeeze_excite/Conv_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_10/project/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_10/squeeze_excite/mul"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_10/project/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_10/project/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_10/project/Conv2D"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_10/project/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_10/project/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_10/project/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_10/project/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_10/project/Identity"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_10/project/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_10/output"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_10/project/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_11/input"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_10/output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_11/expand/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_11/input"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_11/expand/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_11/expand/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_11/expand/Conv2D"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_11/expand/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_11/expand/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_11/expand/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_11/expand/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_11/expand/hard_swish/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_11/expand/BatchNorm/FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_11/expand/hard_swish/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_11/expand/hard_swish/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_11/expand/hard_swish/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_11/expand/hard_swish/mul"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_11/expand/BatchNorm/FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_11/expand/hard_swish/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_11/expand/hard_swish/mul_1"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_11/expand/hard_swish/mul"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_11/expand/hard_swish/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_11/expansion_output"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_11/expand/hard_swish/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_11/depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_11/expansion_output"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_11/depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_11/depthwise/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_11/depthwise/depthwise"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_11/depthwise/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_11/depthwise/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_11/depthwise/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_11/depthwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_11/depthwise/hard_swish/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_11/depthwise/BatchNorm/FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_11/depthwise/hard_swish/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_11/depthwise/hard_swish/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_11/depthwise/hard_swish/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_11/depthwise/hard_swish/mul"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_11/depthwise/BatchNorm/FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_11/depthwise/hard_swish/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_11/depthwise/hard_swish/mul_1"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_11/depthwise/hard_swish/mul"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_11/depthwise/hard_swish/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_11/depthwise_output"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_11/depthwise/hard_swish/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_11/squeeze_excite/Mean"
  op: "Mean"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_11/depthwise_output"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_11/squeeze_excite/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_11/squeeze_excite/Conv/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_11/squeeze_excite/Mean"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_11/squeeze_excite/Conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_11/squeeze_excite/Conv/BiasAdd"
  op: "BiasAdd"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_11/squeeze_excite/Conv/Conv2D"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_11/squeeze_excite/Conv/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_11/squeeze_excite/Conv/Relu"
  op: "Relu"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_11/squeeze_excite/Conv/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_11/squeeze_excite/Conv_1/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_11/squeeze_excite/Conv/Relu"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_11/squeeze_excite/Conv_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_11/squeeze_excite/Conv_1/BiasAdd"
  op: "BiasAdd"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_11/squeeze_excite/Conv_1/Conv2D"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_11/squeeze_excite/Conv_1/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_11/squeeze_excite/Conv_1/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_11/squeeze_excite/Conv_1/BiasAdd"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_11/squeeze_excite/Conv_1/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_11/squeeze_excite/Conv_1/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_11/squeeze_excite/Conv_1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_11/squeeze_excite/Conv_1/mul"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_11/squeeze_excite/Conv_1/Relu6"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_11/squeeze_excite/Conv_1/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_11/squeeze_excite/mul"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_11/depthwise_output"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_11/squeeze_excite/Conv_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_11/project/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_11/squeeze_excite/mul"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_11/project/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_11/project/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_11/project/Conv2D"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_11/project/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_11/project/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_11/project/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_11/project/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_11/project/Identity"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_11/project/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_11/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_11/project/Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_11/input"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_11/output"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_11/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_12/input"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_11/output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_12/expand/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_12/input"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_12/expand/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_12/expand/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_12/expand/Conv2D"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_12/expand/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_12/expand/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_12/expand/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_12/expand/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_12/expand/hard_swish/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_12/expand/BatchNorm/FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_12/expand/hard_swish/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_12/expand/hard_swish/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_12/expand/hard_swish/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_12/expand/hard_swish/mul"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_12/expand/BatchNorm/FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_12/expand/hard_swish/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_12/expand/hard_swish/mul_1"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_12/expand/hard_swish/mul"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_12/expand/hard_swish/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_12/expansion_output"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_12/expand/hard_swish/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "BoxPredictor_0/ClassPredictor_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_12/expansion_output"
  input: "BoxPredictor_0/ClassPredictor_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "BoxPredictor_0/ClassPredictor_depthwise/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "BoxPredictor_0/ClassPredictor_depthwise/depthwise"
  input: "BoxPredictor_0/ClassPredictor_depthwise/BatchNorm/gamma/read"
  input: "BoxPredictor_0/ClassPredictor_depthwise/BatchNorm/beta/read"
  input: "BoxPredictor_0/ClassPredictor_depthwise/BatchNorm/moving_mean/read"
  input: "BoxPredictor_0/ClassPredictor_depthwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "BoxPredictor_0/ClassPredictor_depthwise/Relu6"
  op: "Relu6"
  input: "BoxPredictor_0/ClassPredictor_depthwise/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "BoxPredictor_0/ClassPredictor/Conv2D"
  op: "Conv2D"
  input: "BoxPredictor_0/ClassPredictor_depthwise/Relu6"
  input: "BoxPredictor_0/ClassPredictor/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "BoxPredictor_0/ClassPredictor/BiasAdd"
  op: "BiasAdd"
  input: "BoxPredictor_0/ClassPredictor/Conv2D"
  input: "BoxPredictor_0/ClassPredictor/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "BoxPredictor_0/Reshape_1"
  op: "Reshape"
  input: "BoxPredictor_0/ClassPredictor/BiasAdd"
  input: "BoxPredictor_0/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "BoxPredictor_0/BoxEncodingPredictor_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_12/expansion_output"
  input: "BoxPredictor_0/BoxEncodingPredictor_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "BoxPredictor_0/BoxEncodingPredictor_depthwise/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "BoxPredictor_0/BoxEncodingPredictor_depthwise/depthwise"
  input: "BoxPredictor_0/BoxEncodingPredictor_depthwise/BatchNorm/gamma/read"
  input: "BoxPredictor_0/BoxEncodingPredictor_depthwise/BatchNorm/beta/read"
  input: "BoxPredictor_0/BoxEncodingPredictor_depthwise/BatchNorm/moving_mean/read"
  input: "BoxPredictor_0/BoxEncodingPredictor_depthwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "BoxPredictor_0/BoxEncodingPredictor_depthwise/Relu6"
  op: "Relu6"
  input: "BoxPredictor_0/BoxEncodingPredictor_depthwise/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "BoxPredictor_0/BoxEncodingPredictor/Conv2D"
  op: "Conv2D"
  input: "BoxPredictor_0/BoxEncodingPredictor_depthwise/Relu6"
  input: "BoxPredictor_0/BoxEncodingPredictor/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "BoxPredictor_0/BoxEncodingPredictor/BiasAdd"
  op: "BiasAdd"
  input: "BoxPredictor_0/BoxEncodingPredictor/Conv2D"
  input: "BoxPredictor_0/BoxEncodingPredictor/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "BoxPredictor_0/Reshape"
  op: "Reshape"
  input: "BoxPredictor_0/BoxEncodingPredictor/BiasAdd"
  input: "BoxPredictor_0/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_12/depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_12/expansion_output"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_12/depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_12/depthwise/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_12/depthwise/depthwise"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_12/depthwise/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_12/depthwise/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_12/depthwise/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_12/depthwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_12/depthwise/hard_swish/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_12/depthwise/BatchNorm/FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_12/depthwise/hard_swish/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_12/depthwise/hard_swish/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_12/depthwise/hard_swish/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_12/depthwise/hard_swish/mul"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_12/depthwise/BatchNorm/FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_12/depthwise/hard_swish/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_12/depthwise/hard_swish/mul_1"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_12/depthwise/hard_swish/mul"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_12/depthwise/hard_swish/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_12/depthwise_output"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_12/depthwise/hard_swish/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_12/squeeze_excite/Mean"
  op: "Mean"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_12/depthwise_output"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_12/squeeze_excite/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_12/squeeze_excite/Conv/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_12/squeeze_excite/Mean"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_12/squeeze_excite/Conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_12/squeeze_excite/Conv/BiasAdd"
  op: "BiasAdd"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_12/squeeze_excite/Conv/Conv2D"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_12/squeeze_excite/Conv/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_12/squeeze_excite/Conv/Relu"
  op: "Relu"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_12/squeeze_excite/Conv/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_12/squeeze_excite/Conv_1/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_12/squeeze_excite/Conv/Relu"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_12/squeeze_excite/Conv_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_12/squeeze_excite/Conv_1/BiasAdd"
  op: "BiasAdd"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_12/squeeze_excite/Conv_1/Conv2D"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_12/squeeze_excite/Conv_1/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_12/squeeze_excite/Conv_1/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_12/squeeze_excite/Conv_1/BiasAdd"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_12/squeeze_excite/Conv_1/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_12/squeeze_excite/Conv_1/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_12/squeeze_excite/Conv_1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_12/squeeze_excite/Conv_1/mul"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_12/squeeze_excite/Conv_1/Relu6"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_12/squeeze_excite/Conv_1/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_12/squeeze_excite/mul"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_12/depthwise_output"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_12/squeeze_excite/Conv_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_12/project/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_12/squeeze_excite/mul"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_12/project/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_12/project/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_12/project/Conv2D"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_12/project/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_12/project/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_12/project/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_12/project/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_12/project/Identity"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_12/project/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_12/output"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_12/project/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_13/input"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_12/output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_13/expand/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_13/input"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_13/expand/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_13/expand/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_13/expand/Conv2D"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_13/expand/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_13/expand/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_13/expand/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_13/expand/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_13/expand/hard_swish/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_13/expand/BatchNorm/FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_13/expand/hard_swish/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_13/expand/hard_swish/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_13/expand/hard_swish/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_13/expand/hard_swish/mul"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_13/expand/BatchNorm/FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_13/expand/hard_swish/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_13/expand/hard_swish/mul_1"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_13/expand/hard_swish/mul"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_13/expand/hard_swish/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_13/expansion_output"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_13/expand/hard_swish/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_13/depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_13/expansion_output"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_13/depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_13/depthwise/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_13/depthwise/depthwise"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_13/depthwise/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_13/depthwise/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_13/depthwise/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_13/depthwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_13/depthwise/hard_swish/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_13/depthwise/BatchNorm/FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_13/depthwise/hard_swish/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_13/depthwise/hard_swish/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_13/depthwise/hard_swish/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_13/depthwise/hard_swish/mul"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_13/depthwise/BatchNorm/FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_13/depthwise/hard_swish/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_13/depthwise/hard_swish/mul_1"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_13/depthwise/hard_swish/mul"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_13/depthwise/hard_swish/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_13/depthwise_output"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_13/depthwise/hard_swish/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_13/squeeze_excite/Mean"
  op: "Mean"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_13/depthwise_output"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_13/squeeze_excite/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_13/squeeze_excite/Conv/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_13/squeeze_excite/Mean"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_13/squeeze_excite/Conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_13/squeeze_excite/Conv/BiasAdd"
  op: "BiasAdd"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_13/squeeze_excite/Conv/Conv2D"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_13/squeeze_excite/Conv/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_13/squeeze_excite/Conv/Relu"
  op: "Relu"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_13/squeeze_excite/Conv/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_13/squeeze_excite/Conv_1/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_13/squeeze_excite/Conv/Relu"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_13/squeeze_excite/Conv_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_13/squeeze_excite/Conv_1/BiasAdd"
  op: "BiasAdd"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_13/squeeze_excite/Conv_1/Conv2D"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_13/squeeze_excite/Conv_1/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_13/squeeze_excite/Conv_1/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_13/squeeze_excite/Conv_1/BiasAdd"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_13/squeeze_excite/Conv_1/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_13/squeeze_excite/Conv_1/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_13/squeeze_excite/Conv_1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_13/squeeze_excite/Conv_1/mul"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_13/squeeze_excite/Conv_1/Relu6"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_13/squeeze_excite/Conv_1/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_13/squeeze_excite/mul"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_13/depthwise_output"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_13/squeeze_excite/Conv_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_13/project/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_13/squeeze_excite/mul"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_13/project/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_13/project/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_13/project/Conv2D"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_13/project/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_13/project/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_13/project/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_13/project/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_13/project/Identity"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_13/project/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_13/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_13/project/Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_13/input"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_13/output"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_13/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_14/input"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_13/output"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_14/expand/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_14/input"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_14/expand/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_14/expand/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_14/expand/Conv2D"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_14/expand/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_14/expand/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_14/expand/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_14/expand/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_14/expand/hard_swish/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_14/expand/BatchNorm/FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_14/expand/hard_swish/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_14/expand/hard_swish/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_14/expand/hard_swish/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_14/expand/hard_swish/mul"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_14/expand/BatchNorm/FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_14/expand/hard_swish/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_14/expand/hard_swish/mul_1"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_14/expand/hard_swish/mul"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_14/expand/hard_swish/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_14/expansion_output"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_14/expand/hard_swish/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_14/depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_14/expansion_output"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_14/depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_14/depthwise/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_14/depthwise/depthwise"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_14/depthwise/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_14/depthwise/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_14/depthwise/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_14/depthwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_14/depthwise/hard_swish/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_14/depthwise/BatchNorm/FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_14/depthwise/hard_swish/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_14/depthwise/hard_swish/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_14/depthwise/hard_swish/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_14/depthwise/hard_swish/mul"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_14/depthwise/BatchNorm/FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_14/depthwise/hard_swish/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_14/depthwise/hard_swish/mul_1"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_14/depthwise/hard_swish/mul"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_14/depthwise/hard_swish/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_14/depthwise_output"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_14/depthwise/hard_swish/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_14/squeeze_excite/Mean"
  op: "Mean"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_14/depthwise_output"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_14/squeeze_excite/Mean/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_14/squeeze_excite/Conv/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_14/squeeze_excite/Mean"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_14/squeeze_excite/Conv/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_14/squeeze_excite/Conv/BiasAdd"
  op: "BiasAdd"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_14/squeeze_excite/Conv/Conv2D"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_14/squeeze_excite/Conv/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_14/squeeze_excite/Conv/Relu"
  op: "Relu"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_14/squeeze_excite/Conv/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_14/squeeze_excite/Conv_1/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_14/squeeze_excite/Conv/Relu"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_14/squeeze_excite/Conv_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_14/squeeze_excite/Conv_1/BiasAdd"
  op: "BiasAdd"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_14/squeeze_excite/Conv_1/Conv2D"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_14/squeeze_excite/Conv_1/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_14/squeeze_excite/Conv_1/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_14/squeeze_excite/Conv_1/BiasAdd"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_14/squeeze_excite/Conv_1/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_14/squeeze_excite/Conv_1/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_14/squeeze_excite/Conv_1/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_14/squeeze_excite/Conv_1/mul"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_14/squeeze_excite/Conv_1/Relu6"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_14/squeeze_excite/Conv_1/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_14/squeeze_excite/mul"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_14/depthwise_output"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_14/squeeze_excite/Conv_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_14/project/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_14/squeeze_excite/mul"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_14/project/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_14/project/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_14/project/Conv2D"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_14/project/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_14/project/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_14/project/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_14/project/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_14/project/Identity"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_14/project/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_14/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_14/project/Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_14/input"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/expanded_conv_14/output"
  op: "Identity"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_14/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/Conv_1/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV3/expanded_conv_14/output"
  input: "FeatureExtractor/MobilenetV3/Conv_1/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/Conv_1/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/Conv_1/Conv2D"
  input: "FeatureExtractor/MobilenetV3/Conv_1/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV3/Conv_1/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV3/Conv_1/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV3/Conv_1/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/Conv_1/hard_swish/add"
  op: "AddV2"
  input: "FeatureExtractor/MobilenetV3/Conv_1/BatchNorm/FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/Conv_1/hard_swish/add/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/Conv_1/hard_swish/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV3/Conv_1/hard_swish/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/Conv_1/hard_swish/mul"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV3/Conv_1/BatchNorm/FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/Conv_1/hard_swish/Relu6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/Conv_1/hard_swish/mul_1"
  op: "Mul"
  input: "FeatureExtractor/MobilenetV3/Conv_1/hard_swish/mul"
  input: "FeatureExtractor/MobilenetV3/Conv_1/hard_swish/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "BoxPredictor_1/ClassPredictor_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "FeatureExtractor/MobilenetV3/Conv_1/hard_swish/mul_1"
  input: "BoxPredictor_1/ClassPredictor_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "BoxPredictor_1/ClassPredictor_depthwise/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "BoxPredictor_1/ClassPredictor_depthwise/depthwise"
  input: "BoxPredictor_1/ClassPredictor_depthwise/BatchNorm/gamma/read"
  input: "BoxPredictor_1/ClassPredictor_depthwise/BatchNorm/beta/read"
  input: "BoxPredictor_1/ClassPredictor_depthwise/BatchNorm/moving_mean/read"
  input: "BoxPredictor_1/ClassPredictor_depthwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "BoxPredictor_1/ClassPredictor_depthwise/Relu6"
  op: "Relu6"
  input: "BoxPredictor_1/ClassPredictor_depthwise/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "BoxPredictor_1/ClassPredictor/Conv2D"
  op: "Conv2D"
  input: "BoxPredictor_1/ClassPredictor_depthwise/Relu6"
  input: "BoxPredictor_1/ClassPredictor/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "BoxPredictor_1/ClassPredictor/BiasAdd"
  op: "BiasAdd"
  input: "BoxPredictor_1/ClassPredictor/Conv2D"
  input: "BoxPredictor_1/ClassPredictor/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "BoxPredictor_1/Reshape_1"
  op: "Reshape"
  input: "BoxPredictor_1/ClassPredictor/BiasAdd"
  input: "BoxPredictor_1/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "BoxPredictor_1/BoxEncodingPredictor_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "FeatureExtractor/MobilenetV3/Conv_1/hard_swish/mul_1"
  input: "BoxPredictor_1/BoxEncodingPredictor_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "BoxPredictor_1/BoxEncodingPredictor_depthwise/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "BoxPredictor_1/BoxEncodingPredictor_depthwise/depthwise"
  input: "BoxPredictor_1/BoxEncodingPredictor_depthwise/BatchNorm/gamma/read"
  input: "BoxPredictor_1/BoxEncodingPredictor_depthwise/BatchNorm/beta/read"
  input: "BoxPredictor_1/BoxEncodingPredictor_depthwise/BatchNorm/moving_mean/read"
  input: "BoxPredictor_1/BoxEncodingPredictor_depthwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "BoxPredictor_1/BoxEncodingPredictor_depthwise/Relu6"
  op: "Relu6"
  input: "BoxPredictor_1/BoxEncodingPredictor_depthwise/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "BoxPredictor_1/BoxEncodingPredictor/Conv2D"
  op: "Conv2D"
  input: "BoxPredictor_1/BoxEncodingPredictor_depthwise/Relu6"
  input: "BoxPredictor_1/BoxEncodingPredictor/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "BoxPredictor_1/BoxEncodingPredictor/BiasAdd"
  op: "BiasAdd"
  input: "BoxPredictor_1/BoxEncodingPredictor/Conv2D"
  input: "BoxPredictor_1/BoxEncodingPredictor/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "BoxPredictor_1/Reshape"
  op: "Reshape"
  input: "BoxPredictor_1/BoxEncodingPredictor/BiasAdd"
  input: "BoxPredictor_1/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_2_1x1_256/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV3/Conv_1/hard_swish/mul_1"
  input: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_2_1x1_256/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_2_1x1_256/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_2_1x1_256/Conv2D"
  input: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_2_1x1_256/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_2_1x1_256/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_2_1x1_256/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_2_1x1_256/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_2_1x1_256/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_2_1x1_256/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_2_3x3_s2_512_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_2_1x1_256/Relu6"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_2_3x3_s2_512_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_2_3x3_s2_512_depthwise/depthwise"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_2_3x3_s2_512_depthwise/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_2_3x3_s2_512_depthwise/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_2_3x3_s2_512/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_2_3x3_s2_512_depthwise/Relu6"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_2_3x3_s2_512/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_2_3x3_s2_512/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_2_3x3_s2_512/Conv2D"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_2_3x3_s2_512/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_2_3x3_s2_512/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_2_3x3_s2_512/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_2_3x3_s2_512/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_2_3x3_s2_512/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "BoxPredictor_2/ClassPredictor_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_2_3x3_s2_512/Relu6"
  input: "BoxPredictor_2/ClassPredictor_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "BoxPredictor_2/ClassPredictor_depthwise/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "BoxPredictor_2/ClassPredictor_depthwise/depthwise"
  input: "BoxPredictor_2/ClassPredictor_depthwise/BatchNorm/gamma/read"
  input: "BoxPredictor_2/ClassPredictor_depthwise/BatchNorm/beta/read"
  input: "BoxPredictor_2/ClassPredictor_depthwise/BatchNorm/moving_mean/read"
  input: "BoxPredictor_2/ClassPredictor_depthwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "BoxPredictor_2/ClassPredictor_depthwise/Relu6"
  op: "Relu6"
  input: "BoxPredictor_2/ClassPredictor_depthwise/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "BoxPredictor_2/ClassPredictor/Conv2D"
  op: "Conv2D"
  input: "BoxPredictor_2/ClassPredictor_depthwise/Relu6"
  input: "BoxPredictor_2/ClassPredictor/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "BoxPredictor_2/ClassPredictor/BiasAdd"
  op: "BiasAdd"
  input: "BoxPredictor_2/ClassPredictor/Conv2D"
  input: "BoxPredictor_2/ClassPredictor/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "BoxPredictor_2/Reshape_1"
  op: "Reshape"
  input: "BoxPredictor_2/ClassPredictor/BiasAdd"
  input: "BoxPredictor_2/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "BoxPredictor_2/BoxEncodingPredictor_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_2_3x3_s2_512/Relu6"
  input: "BoxPredictor_2/BoxEncodingPredictor_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "BoxPredictor_2/BoxEncodingPredictor_depthwise/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "BoxPredictor_2/BoxEncodingPredictor_depthwise/depthwise"
  input: "BoxPredictor_2/BoxEncodingPredictor_depthwise/BatchNorm/gamma/read"
  input: "BoxPredictor_2/BoxEncodingPredictor_depthwise/BatchNorm/beta/read"
  input: "BoxPredictor_2/BoxEncodingPredictor_depthwise/BatchNorm/moving_mean/read"
  input: "BoxPredictor_2/BoxEncodingPredictor_depthwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "BoxPredictor_2/BoxEncodingPredictor_depthwise/Relu6"
  op: "Relu6"
  input: "BoxPredictor_2/BoxEncodingPredictor_depthwise/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "BoxPredictor_2/BoxEncodingPredictor/Conv2D"
  op: "Conv2D"
  input: "BoxPredictor_2/BoxEncodingPredictor_depthwise/Relu6"
  input: "BoxPredictor_2/BoxEncodingPredictor/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "BoxPredictor_2/BoxEncodingPredictor/BiasAdd"
  op: "BiasAdd"
  input: "BoxPredictor_2/BoxEncodingPredictor/Conv2D"
  input: "BoxPredictor_2/BoxEncodingPredictor/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "BoxPredictor_2/Reshape"
  op: "Reshape"
  input: "BoxPredictor_2/BoxEncodingPredictor/BiasAdd"
  input: "BoxPredictor_2/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_3_1x1_128/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_2_3x3_s2_512/Relu6"
  input: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_3_1x1_128/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_3_1x1_128/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_3_1x1_128/Conv2D"
  input: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_3_1x1_128/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_3_1x1_128/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_3_1x1_128/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_3_1x1_128/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_3_1x1_128/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_3_1x1_128/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_3_3x3_s2_256_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_3_1x1_128/Relu6"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_3_3x3_s2_256_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_3_3x3_s2_256_depthwise/depthwise"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_3_3x3_s2_256_depthwise/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_3_3x3_s2_256_depthwise/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_3_3x3_s2_256/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_3_3x3_s2_256_depthwise/Relu6"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_3_3x3_s2_256/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_3_3x3_s2_256/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_3_3x3_s2_256/Conv2D"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_3_3x3_s2_256/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_3_3x3_s2_256/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_3_3x3_s2_256/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_3_3x3_s2_256/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_3_3x3_s2_256/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "BoxPredictor_3/ClassPredictor_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_3_3x3_s2_256/Relu6"
  input: "BoxPredictor_3/ClassPredictor_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "BoxPredictor_3/ClassPredictor_depthwise/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "BoxPredictor_3/ClassPredictor_depthwise/depthwise"
  input: "BoxPredictor_3/ClassPredictor_depthwise/BatchNorm/gamma/read"
  input: "BoxPredictor_3/ClassPredictor_depthwise/BatchNorm/beta/read"
  input: "BoxPredictor_3/ClassPredictor_depthwise/BatchNorm/moving_mean/read"
  input: "BoxPredictor_3/ClassPredictor_depthwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "BoxPredictor_3/ClassPredictor_depthwise/Relu6"
  op: "Relu6"
  input: "BoxPredictor_3/ClassPredictor_depthwise/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "BoxPredictor_3/ClassPredictor/Conv2D"
  op: "Conv2D"
  input: "BoxPredictor_3/ClassPredictor_depthwise/Relu6"
  input: "BoxPredictor_3/ClassPredictor/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "BoxPredictor_3/ClassPredictor/BiasAdd"
  op: "BiasAdd"
  input: "BoxPredictor_3/ClassPredictor/Conv2D"
  input: "BoxPredictor_3/ClassPredictor/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "BoxPredictor_3/Reshape_1"
  op: "Reshape"
  input: "BoxPredictor_3/ClassPredictor/BiasAdd"
  input: "BoxPredictor_3/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "BoxPredictor_3/BoxEncodingPredictor_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_3_3x3_s2_256/Relu6"
  input: "BoxPredictor_3/BoxEncodingPredictor_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "BoxPredictor_3/BoxEncodingPredictor_depthwise/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "BoxPredictor_3/BoxEncodingPredictor_depthwise/depthwise"
  input: "BoxPredictor_3/BoxEncodingPredictor_depthwise/BatchNorm/gamma/read"
  input: "BoxPredictor_3/BoxEncodingPredictor_depthwise/BatchNorm/beta/read"
  input: "BoxPredictor_3/BoxEncodingPredictor_depthwise/BatchNorm/moving_mean/read"
  input: "BoxPredictor_3/BoxEncodingPredictor_depthwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "BoxPredictor_3/BoxEncodingPredictor_depthwise/Relu6"
  op: "Relu6"
  input: "BoxPredictor_3/BoxEncodingPredictor_depthwise/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "BoxPredictor_3/BoxEncodingPredictor/Conv2D"
  op: "Conv2D"
  input: "BoxPredictor_3/BoxEncodingPredictor_depthwise/Relu6"
  input: "BoxPredictor_3/BoxEncodingPredictor/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "BoxPredictor_3/BoxEncodingPredictor/BiasAdd"
  op: "BiasAdd"
  input: "BoxPredictor_3/BoxEncodingPredictor/Conv2D"
  input: "BoxPredictor_3/BoxEncodingPredictor/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "BoxPredictor_3/Reshape"
  op: "Reshape"
  input: "BoxPredictor_3/BoxEncodingPredictor/BiasAdd"
  input: "BoxPredictor_3/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_4_1x1_128/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_3_3x3_s2_256/Relu6"
  input: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_4_1x1_128/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_4_1x1_128/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_4_1x1_128/Conv2D"
  input: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_4_1x1_128/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_4_1x1_128/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_4_1x1_128/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_4_1x1_128/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_4_1x1_128/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_4_1x1_128/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_4_3x3_s2_256_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_4_1x1_128/Relu6"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_4_3x3_s2_256_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_4_3x3_s2_256_depthwise/depthwise"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_4_3x3_s2_256_depthwise/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_4_3x3_s2_256_depthwise/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_4_3x3_s2_256/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_4_3x3_s2_256_depthwise/Relu6"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_4_3x3_s2_256/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_4_3x3_s2_256/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_4_3x3_s2_256/Conv2D"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_4_3x3_s2_256/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_4_3x3_s2_256/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_4_3x3_s2_256/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_4_3x3_s2_256/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_4_3x3_s2_256/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "BoxPredictor_4/ClassPredictor_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_4_3x3_s2_256/Relu6"
  input: "BoxPredictor_4/ClassPredictor_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "BoxPredictor_4/ClassPredictor_depthwise/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "BoxPredictor_4/ClassPredictor_depthwise/depthwise"
  input: "BoxPredictor_4/ClassPredictor_depthwise/BatchNorm/gamma/read"
  input: "BoxPredictor_4/ClassPredictor_depthwise/BatchNorm/beta/read"
  input: "BoxPredictor_4/ClassPredictor_depthwise/BatchNorm/moving_mean/read"
  input: "BoxPredictor_4/ClassPredictor_depthwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "BoxPredictor_4/ClassPredictor_depthwise/Relu6"
  op: "Relu6"
  input: "BoxPredictor_4/ClassPredictor_depthwise/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "BoxPredictor_4/ClassPredictor/Conv2D"
  op: "Conv2D"
  input: "BoxPredictor_4/ClassPredictor_depthwise/Relu6"
  input: "BoxPredictor_4/ClassPredictor/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "BoxPredictor_4/ClassPredictor/BiasAdd"
  op: "BiasAdd"
  input: "BoxPredictor_4/ClassPredictor/Conv2D"
  input: "BoxPredictor_4/ClassPredictor/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "BoxPredictor_4/Reshape_1"
  op: "Reshape"
  input: "BoxPredictor_4/ClassPredictor/BiasAdd"
  input: "BoxPredictor_4/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "BoxPredictor_4/BoxEncodingPredictor_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_4_3x3_s2_256/Relu6"
  input: "BoxPredictor_4/BoxEncodingPredictor_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "BoxPredictor_4/BoxEncodingPredictor_depthwise/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "BoxPredictor_4/BoxEncodingPredictor_depthwise/depthwise"
  input: "BoxPredictor_4/BoxEncodingPredictor_depthwise/BatchNorm/gamma/read"
  input: "BoxPredictor_4/BoxEncodingPredictor_depthwise/BatchNorm/beta/read"
  input: "BoxPredictor_4/BoxEncodingPredictor_depthwise/BatchNorm/moving_mean/read"
  input: "BoxPredictor_4/BoxEncodingPredictor_depthwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "BoxPredictor_4/BoxEncodingPredictor_depthwise/Relu6"
  op: "Relu6"
  input: "BoxPredictor_4/BoxEncodingPredictor_depthwise/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "BoxPredictor_4/BoxEncodingPredictor/Conv2D"
  op: "Conv2D"
  input: "BoxPredictor_4/BoxEncodingPredictor_depthwise/Relu6"
  input: "BoxPredictor_4/BoxEncodingPredictor/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "BoxPredictor_4/BoxEncodingPredictor/BiasAdd"
  op: "BiasAdd"
  input: "BoxPredictor_4/BoxEncodingPredictor/Conv2D"
  input: "BoxPredictor_4/BoxEncodingPredictor/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "BoxPredictor_4/Reshape"
  op: "Reshape"
  input: "BoxPredictor_4/BoxEncodingPredictor/BiasAdd"
  input: "BoxPredictor_4/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_5_1x1_64/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_4_3x3_s2_256/Relu6"
  input: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_5_1x1_64/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_5_1x1_64/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_5_1x1_64/Conv2D"
  input: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_5_1x1_64/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_5_1x1_64/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_5_1x1_64/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_5_1x1_64/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_5_1x1_64/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_5_1x1_64/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_5_3x3_s2_128_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "FeatureExtractor/MobilenetV3/layer_17_1_Conv2d_5_1x1_64/Relu6"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_5_3x3_s2_128_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_5_3x3_s2_128_depthwise/depthwise"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_5_3x3_s2_128_depthwise/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_5_3x3_s2_128_depthwise/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_5_3x3_s2_128/Conv2D"
  op: "Conv2D"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_5_3x3_s2_128_depthwise/Relu6"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_5_3x3_s2_128/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_5_3x3_s2_128/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_5_3x3_s2_128/Conv2D"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_5_3x3_s2_128/BatchNorm/gamma/read"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_5_3x3_s2_128/BatchNorm/beta/read"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_mean/read"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_5_3x3_s2_128/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_5_3x3_s2_128/Relu6"
  op: "Relu6"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_5_3x3_s2_128/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "BoxPredictor_5/ClassPredictor_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_5_3x3_s2_128/Relu6"
  input: "BoxPredictor_5/ClassPredictor_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "BoxPredictor_5/ClassPredictor_depthwise/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "BoxPredictor_5/ClassPredictor_depthwise/depthwise"
  input: "BoxPredictor_5/ClassPredictor_depthwise/BatchNorm/gamma/read"
  input: "BoxPredictor_5/ClassPredictor_depthwise/BatchNorm/beta/read"
  input: "BoxPredictor_5/ClassPredictor_depthwise/BatchNorm/moving_mean/read"
  input: "BoxPredictor_5/ClassPredictor_depthwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "BoxPredictor_5/ClassPredictor_depthwise/Relu6"
  op: "Relu6"
  input: "BoxPredictor_5/ClassPredictor_depthwise/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "BoxPredictor_5/ClassPredictor/Conv2D"
  op: "Conv2D"
  input: "BoxPredictor_5/ClassPredictor_depthwise/Relu6"
  input: "BoxPredictor_5/ClassPredictor/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "BoxPredictor_5/ClassPredictor/BiasAdd"
  op: "BiasAdd"
  input: "BoxPredictor_5/ClassPredictor/Conv2D"
  input: "BoxPredictor_5/ClassPredictor/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "BoxPredictor_5/Reshape_1"
  op: "Reshape"
  input: "BoxPredictor_5/ClassPredictor/BiasAdd"
  input: "BoxPredictor_5/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat_1"
  op: "ConcatV2"
  input: "BoxPredictor_0/Reshape_1"
  input: "BoxPredictor_1/Reshape_1"
  input: "BoxPredictor_2/Reshape_1"
  input: "BoxPredictor_3/Reshape_1"
  input: "BoxPredictor_4/Reshape_1"
  input: "BoxPredictor_5/Reshape_1"
  input: "concat_1/axis"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "scale_logits"
  op: "RealDiv"
  input: "concat_1"
  input: "scale_logits/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "convert_scores"
  op: "Sigmoid"
  input: "scale_logits"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "raw_outputs/class_predictions"
  op: "Identity"
  input: "convert_scores"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "BoxPredictor_5/BoxEncodingPredictor_depthwise/depthwise"
  op: "DepthwiseConv2dNative"
  input: "FeatureExtractor/MobilenetV3/layer_17_2_Conv2d_5_3x3_s2_128/Relu6"
  input: "BoxPredictor_5/BoxEncodingPredictor_depthwise/depthwise_weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
}
node {
  name: "BoxPredictor_5/BoxEncodingPredictor_depthwise/BatchNorm/FusedBatchNormV3"
  op: "FusedBatchNormV3"
  input: "BoxPredictor_5/BoxEncodingPredictor_depthwise/depthwise"
  input: "BoxPredictor_5/BoxEncodingPredictor_depthwise/BatchNorm/gamma/read"
  input: "BoxPredictor_5/BoxEncodingPredictor_depthwise/BatchNorm/beta/read"
  input: "BoxPredictor_5/BoxEncodingPredictor_depthwise/BatchNorm/moving_mean/read"
  input: "BoxPredictor_5/BoxEncodingPredictor_depthwise/BatchNorm/moving_variance/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "U"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "epsilon"
    value {
      f: 0.001
    }
  }
  attr {
    key: "is_training"
    value {
      b: false
    }
  }
}
node {
  name: "BoxPredictor_5/BoxEncodingPredictor_depthwise/Relu6"
  op: "Relu6"
  input: "BoxPredictor_5/BoxEncodingPredictor_depthwise/BatchNorm/FusedBatchNormV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "BoxPredictor_5/BoxEncodingPredictor/Conv2D"
  op: "Conv2D"
  input: "BoxPredictor_5/BoxEncodingPredictor_depthwise/Relu6"
  input: "BoxPredictor_5/BoxEncodingPredictor/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "BoxPredictor_5/BoxEncodingPredictor/BiasAdd"
  op: "BiasAdd"
  input: "BoxPredictor_5/BoxEncodingPredictor/Conv2D"
  input: "BoxPredictor_5/BoxEncodingPredictor/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "BoxPredictor_5/Reshape"
  op: "Reshape"
  input: "BoxPredictor_5/BoxEncodingPredictor/BiasAdd"
  input: "BoxPredictor_5/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "concat"
  op: "ConcatV2"
  input: "BoxPredictor_0/Reshape"
  input: "BoxPredictor_1/Reshape"
  input: "BoxPredictor_2/Reshape"
  input: "BoxPredictor_3/Reshape"
  input: "BoxPredictor_4/Reshape"
  input: "BoxPredictor_5/Reshape"
  input: "concat/axis"
  attr {
    key: "N"
    value {
      i: 6
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Squeeze"
  op: "Squeeze"
  input: "concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 2
      }
    }
  }
}
node {
  name: "raw_outputs/box_encodings"
  op: "Identity"
  input: "Squeeze"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "TFLite_Detection_PostProcess"
  op: "TFLite_Detection_PostProcess"
  input: "raw_outputs/box_encodings"
  input: "raw_outputs/class_predictions"
  input: "anchors"
  attr {
    key: "_output_quantized"
    value {
      b: true
    }
  }
  attr {
    key: "_output_types"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_support_output_type_float_in_quantized_op"
    value {
      b: true
    }
  }
  attr {
    key: "detections_per_class"
    value {
      i: 100
    }
  }
  attr {
    key: "h_scale"
    value {
      f: 5
    }
  }
  attr {
    key: "max_classes_per_detection"
    value {
      i: 1
    }
  }
  attr {
    key: "max_detections"
    value {
      i: 100
    }
  }
  attr {
    key: "nms_iou_threshold"
    value {
      f: 0.6
    }
  }
  attr {
    key: "nms_score_threshold"
    value {
      f: 1e-08
    }
  }
  attr {
    key: "num_classes"
    value {
      i: 90
    }
  }
  attr {
    key: "use_regular_nms"
    value {
      b: false
    }
  }
  attr {
    key: "w_scale"
    value {
      f: 5
    }
  }
  attr {
    key: "x_scale"
    value {
      f: 10
    }
  }
  attr {
    key: "y_scale"
    value {
      f: 10
    }
  }
}
library {
}
